## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: |-

  API endpoints for creating user and getting user info
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/my-info
    metadata:
      title: 'Get the logged in user''s info'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":479,"username":"mmurray","first_name":"Alverta","last_name":"Murray","full_name":"Alverta Murray","email":"mmurray@test.com","gender":"female","date_of_birth":"23\/Dec\/1984","roles":[]}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/users/with-permissions
    metadata:
      title: 'Get all users with permissions'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"user":{"id":484,"username":"tillman.bode","first_name":"Deanna","last_name":"Kuphal","full_name":"Deanna Kuphal","email":"tillman.bode@test.com","gender":"male","date_of_birth":"17\/Feb\/1991","roles":[]},"permissions":[]},{"user":{"id":485,"username":"pollich.jany","first_name":"Itzel","last_name":"Streich","full_name":"Itzel Streich","email":"pollich.jany@test.com","gender":"female","date_of_birth":"21\/Dec\/2006","roles":[]},"permissions":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/all-students
    metadata:
      title: 'Get all students'' info'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":480,"username":"kali.smith","first_name":"Kacie","last_name":"Lueilwitz","full_name":"Kacie Lueilwitz","email":"kali.smith@test.com","gender":"female","date_of_birth":"18\/Dec\/1988","roles":[]},{"id":481,"username":"sipes.wilhelm","first_name":"Angelita","last_name":"Luettgen","full_name":"Angelita Luettgen","email":"sipes.wilhelm@test.com","gender":"male","date_of_birth":"17\/Jan\/1989","roles":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/all-instructors
    metadata:
      title: 'Get all instructors'' info'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":482,"username":"florian79","first_name":"Robyn","last_name":"Weissnat","full_name":"Robyn Weissnat","email":"florian79@test.com","gender":"female","date_of_birth":"14\/Dec\/1972","roles":[]},{"id":483,"username":"benny.hayes","first_name":"Robin","last_name":"Powlowski","full_name":"Robin Powlowski","email":"benny.hayes@test.com","gender":"male","date_of_birth":"24\/Sep\/2007","roles":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      title: 'Get a list of all users'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":486,"username":"gretchen.gerhold","first_name":"Dayna","last_name":"Hane","full_name":"Dayna Hane","email":"gretchen.gerhold@test.com","gender":"male","date_of_birth":"22\/Aug\/2000","roles":[]},{"id":487,"username":"hans97","first_name":"Heloise","last_name":"Koepp","full_name":"Heloise Koepp","email":"hans97@test.com","gender":"female","date_of_birth":"9\/Mar\/1982","roles":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      title: 'Create a new user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'A unique username.'
        required: true
        example: qui
        type: string
      email:
        name: email
        description: 'A unique email address.'
        required: true
        example: aut
        type: string
      first_name:
        name: first_name
        description: 'First name of user.'
        required: true
        example: quod
        type: string
      last_name:
        name: last_name
        description: 'Last name of user.'
        required: true
        example: odio
        type: string
      gender:
        name: gender
        description: 'Gender of the user.'
        required: true
        example: nobis
        type: string
      date_of_birth:
        name: date_of_birth
        description: 'The date of birth of user. Must be a valid date.'
        required: true
        example: '2020-12-01'
        type: string
      role_ids:
        name: role_ids
        description: ''
        required: true
        example:
          - 20
          - 10
        type: 'integer[]'
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Successfully created user!",
           "credentials": {
               "email": "user@test.com",
               "password": "12345678"
           }
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Get the specified user.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 2
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":488,"username":"feil.maryjane","first_name":"Noemie","last_name":"Ortiz","full_name":"Noemie Ortiz","email":"feil.maryjane@test.com","gender":"female","date_of_birth":"1\/Aug\/1972","roles":[]}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Delete the specified user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully deleted user!"
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Update the specified user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 10
        type: integer
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'A unique username.'
        required: true
        example: ducimus
        type: string
      email:
        name: email
        description: 'A unique email address.'
        required: true
        example: amet
        type: string
      first_name:
        name: first_name
        description: 'First name of user.'
        required: true
        example: quaerat
        type: string
      last_name:
        name: last_name
        description: 'Last name of user.'
        required: true
        example: atque
        type: string
      gender:
        name: gender
        description: 'Gender of the user.'
        required: true
        example: ducimus
        type: string
      date_of_birth:
        name: date_of_birth
        description: 'The date of birth of user. Must be a valid date.'
        required: true
        example: '2020-12-01'
        type: string
      role_ids:
        name: role_ids
        description: ''
        required: true
        example:
          - 17
          - 2
        type: 'integer[]'
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully updated user!"
          }
        headers: []
        description: '200'
    responseFields: []
