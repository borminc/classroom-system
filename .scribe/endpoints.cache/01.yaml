## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Course Registration'
description: |-

  API endpoints for registering courses
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/courses/view-student-registered
    metadata:
      title: 'Get students'' registered courses'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":500,"name":"Intro to ab","code":"nDCr0","description":"Pariatur sit omnis ad quibusdam. Et corporis hic qui a. Error qui repellat rerum ut quia ut dolores sit.","instructor":{"id":2,"username":"i_1","first_name":"Instructor","last_name":"1","full_name":"Instructor 1","email":"i_1@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]}},{"id":501,"name":"Intro to cum","code":"xi4ey","description":"Voluptas vero iste quis magnam et est. Sunt omnis est odio similique ut ducimus qui asperiores. Quia non voluptas veniam aut blanditiis rerum.","instructor":{"id":9,"username":"i_8","first_name":"Instructor","last_name":"8","full_name":"Instructor 8","email":"i_8@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/courses/view-instructor-registered
    metadata:
      title: 'Get instructors'' registered courses'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":502,"name":"Intro to quia","code":"vLkDm","description":"Ipsam fugit quas consequatur voluptatem facere sequi. Aliquam ea labore est. Sunt eaque non et fugiat iure.","instructor":{"id":11,"username":"i_10","first_name":"Instructor","last_name":"10","full_name":"Instructor 10","email":"i_10@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]}},{"id":503,"name":"Intro to fuga","code":"5RRlQ","description":"Enim ad voluptatum natus aut. Laboriosam voluptatem vel id fuga cumque. Assumenda repellendus cumque officiis.","instructor":{"id":477,"username":"bormin chau","first_name":"bormin","last_name":"chau","full_name":"bormin chau","email":"borminchau@gmail.com","gender":"male","date_of_birth":"1\/Jan\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"},{"id":3,"name":"student","display_name":"student"}]}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/courses/self-register
    metadata:
      title: 'Self-register course by students'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      course_id:
        name: course_id
        description: 'The id of the course.'
        required: true
        example: 18
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully enrolled!"
          }
        headers: []
        description: '200'
      -
        status: 405
        content: |-
          {
           "message": "You are already enrolled in this course."
          }
        headers: []
        description: '405'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/courses/register-student
    metadata:
      title: 'Register students'' courses by admin'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The user_id of the student to be registered.'
        required: true
        example: 7
        type: integer
      course_id:
        name: course_id
        description: 'The id of the course.'
        required: true
        example: 19
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully registered student!"
          }
        headers: []
        description: '200'
      -
        status: 405
        content: |-
          {
           "message": "User cannot take any courses."
          }
        headers: []
        description: '405'
    responseFields: []
