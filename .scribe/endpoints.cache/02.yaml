## Autogenerated by Scribe. DO NOT MODIFY.

name: Courses
description: |-

  API endpoints for getting info about courses and creating courses
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/courses/with-students
    metadata:
      title: 'Get a list of all courses with students'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":504,"name":"Intro to eum","code":"rAW0W","description":"Maiores ratione et perferendis. Sint quis qui consequatur qui.","instructor":{"id":9,"username":"i_8","first_name":"Instructor","last_name":"8","full_name":"Instructor 8","email":"i_8@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]},"students":[]},{"id":505,"name":"Intro to dolor","code":"yLRts","description":"Tempora explicabo enim nam laudantium hic aut. Unde eveniet rerum quo reprehenderit ea nihil. Enim voluptatem dolor dicta incidunt magni.","instructor":{"id":6,"username":"i_5","first_name":"Instructor","last_name":"5","full_name":"Instructor 5","email":"i_5@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]},"students":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/courses
    metadata:
      title: 'Get a list of all courses'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":506,"name":"Intro to molestias","code":"6TCaR","description":"Est aut sit voluptas labore qui. Laudantium dolorem atque aliquam. Vero nam impedit vel vel.","instructor":{"id":5,"username":"i_4","first_name":"Instructor","last_name":"4","full_name":"Instructor 4","email":"i_4@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]}},{"id":507,"name":"Intro to mollitia","code":"0y0mQ","description":"Eveniet velit laudantium cupiditate rem voluptatem quia. Ducimus error sint ipsam itaque.","instructor":{"id":2,"username":"i_1","first_name":"Instructor","last_name":"1","full_name":"Instructor 1","email":"i_1@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/courses
    metadata:
      title: 'Create a new course'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the course.'
        required: true
        example: earum
        type: string
      code:
        name: code
        description: 'The code of the course.'
        required: true
        example: ut
        type: string
      description:
        name: description
        description: 'The description of the course.'
        required: true
        example: repellendus
        type: string
      instructor_id:
        name: instructor_id
        description: 'The id of the instructor.'
        required: true
        example: 5
        type: integer
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Successfully created course!"
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/courses/{id}'
    metadata:
      title: 'Get the specified course.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 14
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":508,"name":"Intro to non","code":"6vQBi","description":"Corrupti est rem iusto qui. Magni voluptate aliquid saepe dolorum aut. Quidem dolor repellendus pariatur.","instructor":{"id":10,"username":"i_9","first_name":"Instructor","last_name":"9","full_name":"Instructor 9","email":"i_9@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]}}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/courses/{id}'
    metadata:
      title: 'Delete the specified course'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 12
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully deleted user!"
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/courses/{id}'
    metadata:
      title: 'Update the specified course'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 14
        type: integer
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the course.'
        required: true
        example: sit
        type: string
      code:
        name: code
        description: 'The code of the course.'
        required: true
        example: nam
        type: string
      description:
        name: description
        description: 'The description of the course.'
        required: true
        example: ut
        type: string
      instructor_id:
        name: instructor_id
        description: 'The id of the instructor.'
        required: true
        example: 20
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully updated course!"
          }
        headers: []
        description: '200'
    responseFields: []
