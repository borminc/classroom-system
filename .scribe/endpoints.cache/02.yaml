## Autogenerated by Scribe. DO NOT MODIFY.

name: Courses
description: |-

  API endpoints for getting info about courses and creating courses
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/courses/with-students
    metadata:
      title: 'Get a list of all courses with students'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":44,"name":"Intro to quos","code":"QNbCR","description":"Consectetur quia dolores ut architecto ex qui et. Suscipit eos tempora in. Illo commodi non corporis ea voluptatem praesentium.","instructor":{"id":6,"username":"i_5","first_name":"Instructor","last_name":"5","full_name":"Instructor 5","email":"i_5@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}],"permissions":[{"id":22,"name":"teach courses","display_name":"teach courses","group":"Instructor permission"},{"id":23,"name":"view own-instructor-courses","display_name":"view own-instructor-courses","group":"Instructor permission"}]},"students":[]},{"id":45,"name":"Intro to numquam","code":"QnJxt","description":"Explicabo unde assumenda sapiente et hic quisquam. Sunt sint ducimus porro suscipit.","instructor":{"id":6,"username":"i_5","first_name":"Instructor","last_name":"5","full_name":"Instructor 5","email":"i_5@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}],"permissions":[{"id":22,"name":"teach courses","display_name":"teach courses","group":"Instructor permission"},{"id":23,"name":"view own-instructor-courses","display_name":"view own-instructor-courses","group":"Instructor permission"}]},"students":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/courses
    metadata:
      title: 'Get a list of all courses'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":46,"name":"Intro to labore","code":"xPUMd","description":"Porro voluptatum ut commodi. Ad aliquam tempore repellat inventore et ut. Sunt neque omnis quia optio nobis nihil officia eligendi.","instructor":{"id":7,"username":"i_6","first_name":"Instructor","last_name":"6","full_name":"Instructor 6","email":"i_6@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}],"permissions":[{"id":22,"name":"teach courses","display_name":"teach courses","group":"Instructor permission"},{"id":23,"name":"view own-instructor-courses","display_name":"view own-instructor-courses","group":"Instructor permission"}]}},{"id":47,"name":"Intro to est","code":"8ybeY","description":"Omnis in consequatur temporibus. Velit qui quo dolores. Saepe error esse et saepe nulla. Sed assumenda qui laudantium ipsam distinctio.","instructor":{"id":6,"username":"i_5","first_name":"Instructor","last_name":"5","full_name":"Instructor 5","email":"i_5@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}],"permissions":[{"id":22,"name":"teach courses","display_name":"teach courses","group":"Instructor permission"},{"id":23,"name":"view own-instructor-courses","display_name":"view own-instructor-courses","group":"Instructor permission"}]}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/courses
    metadata:
      title: 'Create a new course'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the course.'
        required: true
        example: occaecati
        type: string
      code:
        name: code
        description: 'The code of the course.'
        required: true
        example: illum
        type: string
      description:
        name: description
        description: 'The description of the course.'
        required: true
        example: et
        type: string
      instructor_id:
        name: instructor_id
        description: 'The id of the instructor.'
        required: true
        example: 12
        type: integer
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Successfully created course!"
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/courses/{id}'
    metadata:
      title: 'Get the specified course.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 18
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":48,"name":"Intro to eos","code":"dNHS6","description":"Repudiandae et dolores quisquam. Beatae doloremque et fuga voluptas veritatis sapiente.","instructor":{"id":9,"username":"i_8","first_name":"Instructor","last_name":"8","full_name":"Instructor 8","email":"i_8@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}],"permissions":[{"id":22,"name":"teach courses","display_name":"teach courses","group":"Instructor permission"},{"id":23,"name":"view own-instructor-courses","display_name":"view own-instructor-courses","group":"Instructor permission"}]}}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/courses/{id}'
    metadata:
      title: 'Update the specified course'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 8
        type: integer
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the course.'
        required: true
        example: ducimus
        type: string
      code:
        name: code
        description: 'The code of the course.'
        required: true
        example: sapiente
        type: string
      description:
        name: description
        description: 'The description of the course.'
        required: true
        example: qui
        type: string
      instructor_id:
        name: instructor_id
        description: 'The id of the instructor.'
        required: true
        example: 17
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully updated course!"
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/courses/{id}'
    metadata:
      title: 'Delete the specified course'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 3
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully deleted user!"
          }
        headers: []
        description: '200'
    responseFields: []
