## Autogenerated by Scribe. DO NOT MODIFY.

name: Courses
description: |-

  API endpoints for getting info about courses and creating courses
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/courses
    metadata:
      title: 'Get a list of all courses'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":8,"name":"Intro to est","code":"Yj3Cx","description":"Quo aliquid est error minima et itaque minima. Quidem soluta veniam et qui. Nihil necessitatibus corrupti consequuntur ut est.","instructor":{"id":7,"username":"i_6","first_name":"Instructor","last_name":"6","full_name":"Instructor 6","email":"i_6@test.com","gender":"male","date_of_birth":"2000-02-03 18:07:40","roles":[2]}},{"id":9,"name":"Intro to doloribus","code":"Fq0Ng","description":"Placeat veniam et a illo corrupti perspiciatis earum dolor. Quod porro et dolore est praesentium. Incidunt quisquam qui iusto sint.","instructor":{"id":6,"username":"i_5","first_name":"Instructor","last_name":"5","full_name":"Instructor 5","email":"i_5@test.com","gender":"male","date_of_birth":"2000-02-03 18:07:40","roles":[2]}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/courses
    metadata:
      title: 'Create a new course'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the course'
        required: true
        example: quia
        type: string
      code:
        name: code
        description: 'The code of the course'
        required: true
        example: dolor
        type: string
      description:
        name: description
        description: 'The description of the course'
        required: true
        example: nobis
        type: string
      instructor_id:
        name: instructor_id
        description: 'The user_id of the instructor of the course'
        required: true
        example: 6
        type: integer
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Successfully created course!"
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/courses/{id}'
    metadata:
      title: 'Get the specified course.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course'
        required: true
        example: 3
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":10,"name":"Intro to libero","code":"QIbKw","description":"Cumque aut voluptatibus ipsum quod provident quos. Ex sequi et officiis repellat. Fugiat nisi deserunt distinctio temporibus.","instructor":{"id":3,"username":"i_2","first_name":"Instructor","last_name":"2","full_name":"Instructor 2","email":"i_2@test.com","gender":"male","date_of_birth":"2000-02-03 18:07:39","roles":[2]}}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/courses/{id}'
    metadata:
      title: 'Update the specified course'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course'
        required: true
        example: 10
        type: integer
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the course'
        required: true
        example: quia
        type: string
      code:
        name: code
        description: 'The code of the course'
        required: true
        example: soluta
        type: string
      description:
        name: description
        description: 'The description of the course'
        required: true
        example: molestiae
        type: string
      instructor_id:
        name: instructor_id
        description: 'The user_id of the instructor of the course'
        required: true
        example: 2
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully updated course!"
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/courses/{id}'
    metadata:
      title: 'Delete the specified course'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course'
        required: true
        example: 11
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully deleted user!"
          }
        headers: []
        description: '200'
    responseFields: []
