name: Users
description: |-

  API endpoints for creating user and getting user info
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/my-info
    metadata:
      title: 'Get the logged in user''s info'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":508,"username":"corene.conn","first_name":"Karen","last_name":"Sawayn","full_name":"Karen Sawayn","email":"corene.conn@test.com","gender":"male","date_of_birth":"6\/Oct\/1974","roles":[]}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/all-students
    metadata:
      title: 'Get all students'' info'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":509,"username":"kkozey","first_name":"Rebecca","last_name":"Spencer","full_name":"Rebecca Spencer","email":"kkozey@test.com","gender":"female","date_of_birth":"27\/Nov\/2018","roles":[]},{"id":510,"username":"berge.lisette","first_name":"Columbus","last_name":"Renner","full_name":"Columbus Renner","email":"berge.lisette@test.com","gender":"male","date_of_birth":"9\/Feb\/1975","roles":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/all-instructors
    metadata:
      title: 'Get all instructors'' info'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":511,"username":"reynolds.jean","first_name":"Meghan","last_name":"Zieme","full_name":"Meghan Zieme","email":"reynolds.jean@test.com","gender":"male","date_of_birth":"5\/Aug\/1974","roles":[]},{"id":512,"username":"imogene11","first_name":"Kelton","last_name":"Reichert","full_name":"Kelton Reichert","email":"imogene11@test.com","gender":"male","date_of_birth":"12\/Dec\/1981","roles":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/users/with-permissions
    metadata:
      title: 'Get all users with permissions'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"user":{"id":513,"username":"cdonnelly","first_name":"Sherman","last_name":"Hirthe","full_name":"Sherman Hirthe","email":"cdonnelly@test.com","gender":"female","date_of_birth":"18\/Jun\/1988","roles":[]},"permissions":[]},{"user":{"id":514,"username":"sawayn.astrid","first_name":"Osbaldo","last_name":"Mayert","full_name":"Osbaldo Mayert","email":"sawayn.astrid@test.com","gender":"male","date_of_birth":"20\/Jun\/1986","roles":[]},"permissions":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      title: 'Get a list of all users'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":515,"username":"axel39","first_name":"Cordie","last_name":"White","full_name":"Cordie White","email":"axel39@test.com","gender":"female","date_of_birth":"27\/Aug\/2008","roles":[]},{"id":516,"username":"ramiro.walsh","first_name":"Keenan","last_name":"Schaden","full_name":"Keenan Schaden","email":"ramiro.walsh@test.com","gender":"male","date_of_birth":"9\/Nov\/2015","roles":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      title: 'Create a new user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'A unique username.'
        required: true
        example: qui
        type: string
      email:
        name: email
        description: 'A unique email address.'
        required: true
        example: occaecati
        type: string
      first_name:
        name: first_name
        description: 'First name of user.'
        required: true
        example: fugiat
        type: string
      last_name:
        name: last_name
        description: 'Last name of user.'
        required: true
        example: perferendis
        type: string
      gender:
        name: gender
        description: 'Gender of the user.'
        required: true
        example: qui
        type: string
      date_of_birth:
        name: date_of_birth
        description: 'The date of birth of user. Must be a valid date.'
        required: true
        example: '2020-12-01'
        type: string
      role_ids:
        name: role_ids
        description: ''
        required: true
        example:
          - 11
          - 8
        type: 'integer[]'
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Successfully created user!",
           "credentials": {
               "email": "user@test.com",
               "password": "12345678"
           }
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Get the specified user.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 7
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":517,"username":"ariel49","first_name":"Aileen","last_name":"Tromp","full_name":"Aileen Tromp","email":"ariel49@test.com","gender":"male","date_of_birth":"9\/Feb\/1999","roles":[]}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Update the specified user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 14
        type: integer
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'A unique username.'
        required: true
        example: sed
        type: string
      email:
        name: email
        description: 'A unique email address.'
        required: true
        example: consequatur
        type: string
      first_name:
        name: first_name
        description: 'First name of user.'
        required: true
        example: iure
        type: string
      last_name:
        name: last_name
        description: 'Last name of user.'
        required: true
        example: illum
        type: string
      gender:
        name: gender
        description: 'Gender of the user.'
        required: true
        example: earum
        type: string
      date_of_birth:
        name: date_of_birth
        description: 'The date of birth of user. Must be a valid date.'
        required: true
        example: '2020-12-01'
        type: string
      role_ids:
        name: role_ids
        description: ''
        required: true
        example:
          - 11
          - 6
        type: 'integer[]'
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully updated user!"
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Delete the specified user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 16
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully deleted user!"
          }
        headers: []
        description: '200'
    responseFields: []
