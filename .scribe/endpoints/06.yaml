name: Users
description: |-

  API endpoints for creating user and getting user info
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/my-info
    metadata:
      title: 'Get the logged in user''s info'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":510,"username":"marquise.jerde","first_name":"Jeffery","last_name":"Turner","full_name":"Jeffery Turner","email":"marquise.jerde@test.com","gender":"female","date_of_birth":"19\/Feb\/1980","roles":[],"permissions":[]}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/all-students
    metadata:
      title: 'Get all students'' info'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":511,"username":"dakota48","first_name":"Evie","last_name":"Wilderman","full_name":"Evie Wilderman","email":"dakota48@test.com","gender":"female","date_of_birth":"4\/Nov\/1990","roles":[],"permissions":[]},{"id":512,"username":"ondricka.melissa","first_name":"Camren","last_name":"Heaney","full_name":"Camren Heaney","email":"ondricka.melissa@test.com","gender":"male","date_of_birth":"10\/Jan\/1971","roles":[],"permissions":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/all-instructors
    metadata:
      title: 'Get all instructors'' info'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":513,"username":"orlo.flatley","first_name":"Justina","last_name":"Quigley","full_name":"Justina Quigley","email":"orlo.flatley@test.com","gender":"male","date_of_birth":"27\/Mar\/1983","roles":[],"permissions":[]},{"id":514,"username":"valerie.feil","first_name":"Albert","last_name":"West","full_name":"Albert West","email":"valerie.feil@test.com","gender":"female","date_of_birth":"6\/Dec\/1986","roles":[],"permissions":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      title: 'Get a list of all users'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":515,"username":"fokon","first_name":"Clint","last_name":"Schultz","full_name":"Clint Schultz","email":"fokon@test.com","gender":"female","date_of_birth":"11\/May\/2010","roles":[],"permissions":[]},{"id":516,"username":"tony.cummings","first_name":"Lauriane","last_name":"Bashirian","full_name":"Lauriane Bashirian","email":"tony.cummings@test.com","gender":"male","date_of_birth":"25\/Apr\/2004","roles":[],"permissions":[]}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      title: 'Create a new user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'A unique username.'
        required: true
        example: et
        type: string
      email:
        name: email
        description: 'A unique email address.'
        required: true
        example: voluptatem
        type: string
      first_name:
        name: first_name
        description: 'First name of user.'
        required: true
        example: numquam
        type: string
      last_name:
        name: last_name
        description: 'Last name of user.'
        required: true
        example: in
        type: string
      gender:
        name: gender
        description: 'Gender of the user.'
        required: true
        example: et
        type: string
      date_of_birth:
        name: date_of_birth
        description: 'The date of birth of user. Must be a valid date.'
        required: true
        example: '2020-12-01'
        type: string
      role_ids:
        name: role_ids
        description: ''
        required: true
        example:
          - 15
          - 13
        type: 'integer[]'
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Successfully created user!",
           "credentials": {
               "email": "user@test.com",
               "password": "12345678"
           }
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Get the specified user.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 13
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":517,"username":"alfonzo20","first_name":"Tia","last_name":"Steuber","full_name":"Tia Steuber","email":"alfonzo20@test.com","gender":"male","date_of_birth":"31\/Mar\/2007","roles":[],"permissions":[]}}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Update the specified user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 12
        type: integer
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'A unique username.'
        required: true
        example: cupiditate
        type: string
      email:
        name: email
        description: 'A unique email address.'
        required: true
        example: perspiciatis
        type: string
      first_name:
        name: first_name
        description: 'First name of user.'
        required: true
        example: et
        type: string
      last_name:
        name: last_name
        description: 'Last name of user.'
        required: true
        example: nulla
        type: string
      gender:
        name: gender
        description: 'Gender of the user.'
        required: true
        example: voluptas
        type: string
      date_of_birth:
        name: date_of_birth
        description: 'The date of birth of user. Must be a valid date.'
        required: true
        example: '2020-12-01'
        type: string
      role_ids:
        name: role_ids
        description: ''
        required: true
        example:
          - 15
          - 18
        type: 'integer[]'
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully updated user!"
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{id}'
    metadata:
      title: 'Delete the specified user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 17
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully deleted user!"
          }
        headers: []
        description: '200'
    responseFields: []
