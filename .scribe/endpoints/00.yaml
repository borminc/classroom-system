name: Authentication
description: |-

  API endpoints for authentication such as login and registration
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      title: 'Login user'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: vel
        type: string
      password:
        name: password
        description: ''
        required: true
        example: nisi
        type: string
      remember_me:
        name: remember_me
        description: ''
        required: true
        example: true
        type: boolean
    responses:
      -
        status: 200
        content: |-
          {
           "access_token": "eyJ0eX...",
           "token_type": "Bearer",
           "expires_at": "2021-09-06 15:02:06",
           "user": {
               "id": 2,
               "username": "i_1",
               "full_name": "Instructor 1",
               "email": "i_1@test.com",
               "gender": "male",
               "date_of_birth": "2000-02-03 14:23:35"
           },
           "verified": true
          }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
           "message": "Invalid username or password."
          }
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/logout
    metadata:
      title: 'Log out user'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully logged out"
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/self-register-student
    metadata:
      title: 'Self-registration of new users'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: ''
        required: true
        example: et
        type: string
      email:
        name: email
        description: ''
        required: true
        example: expedita
        type: string
      password:
        name: password
        description: ''
        required: true
        example: similique
        type: string
      password_confirmation:
        name: password_confirmation
        description: ''
        required: true
        example: quia
        type: string
      first_name:
        name: first_name
        description: ''
        required: true
        example: neque
        type: string
      last_name:
        name: last_name
        description: ''
        required: true
        example: omnis
        type: string
      gender:
        name: gender
        description: ''
        required: true
        example: harum
        type: string
      date_of_birth:
        name: date_of_birth
        description: 'Date in the format of Y-m-d'
        required: true
        example: eos
        type: string
    responses:
      -
        status: 201
        content: |-
          {
           "message": "Successfully created user!"
          }
        headers: []
        description: '201'
    responseFields: []
