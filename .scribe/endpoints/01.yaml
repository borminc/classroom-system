name: 'Course Registration'
description: |-

  API endpoints for registering courses
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/courses/view-student-registered
    metadata:
      title: 'Get students'' registered courses'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":31,"name":"Intro to eius","code":"vO0s5","description":"Et eligendi natus qui veniam molestiae temporibus. Quam quibusdam reiciendis ipsum alias. Dolore explicabo quam placeat in.","instructor":{"id":10,"username":"i_9","first_name":"Instructor","last_name":"9","full_name":"Instructor 9","email":"i_9@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]}},{"id":32,"name":"Intro to molestiae","code":"PP5d0","description":"Ipsa asperiores doloremque ea tempore. Impedit ea voluptatem molestiae doloribus. Ea deserunt qui quia quo.","instructor":{"id":11,"username":"i_10","first_name":"Instructor","last_name":"10","full_name":"Instructor 10","email":"i_10@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/courses/view-instructor-registered
    metadata:
      title: 'Get instructors'' registered courses'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":33,"name":"Intro to mollitia","code":"pxqic","description":"Quam quod illum unde voluptatem minus. Molestiae accusantium maxime quaerat fuga est.","instructor":{"id":6,"username":"i_5","first_name":"Instructor","last_name":"5","full_name":"Instructor 5","email":"i_5@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]}},{"id":34,"name":"Intro to libero","code":"B5tn5","description":"Reprehenderit harum optio enim sit dolores labore enim. Omnis porro illum vitae dolorem cum enim.","instructor":{"id":10,"username":"i_9","first_name":"Instructor","last_name":"9","full_name":"Instructor 9","email":"i_9@test.com","gender":"male","date_of_birth":"3\/Feb\/2000","roles":[{"id":2,"name":"instructor","display_name":"instructor"}]}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/courses/self-register
    metadata:
      title: 'Self-register course by students'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      course_id:
        name: course_id
        description: 'The id of the course.'
        required: true
        example: 19
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully enrolled!"
          }
        headers: []
        description: '200'
      -
        status: 405
        content: |-
          {
           "message": "You are already enrolled in this course."
          }
        headers: []
        description: '405'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/courses/register-student
    metadata:
      title: 'Register students'' courses by admin'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The user_id of the student to be registered.'
        required: true
        example: 4
        type: integer
      course_id:
        name: course_id
        description: 'The id of the course.'
        required: true
        example: 8
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully registered student!"
          }
        headers: []
        description: '200'
      -
        status: 405
        content: |-
          {
           "message": "User cannot take any courses."
          }
        headers: []
        description: '405'
    responseFields: []
