name: 'Course Registration'
description: |-

  API endpoints for registering courses
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/courses/view-student-registered
    metadata:
      title: 'Get students'' registered courses'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":8,"name":"Intro to vitae","code":"qQtLg","description":"Consectetur quos velit est. Tempore dolorem cum adipisci id ipsum consequatur. Sit saepe possimus sequi minima aut.","instructor":{"id":3,"username":"i_2","full_name":"Instructor 2","email":"i_2@test.com","gender":"male","date_of_birth":"2000-02-03 14:23:35"}},{"id":9,"name":"Intro to omnis","code":"vMlzR","description":"Iste aliquid corporis consequatur enim reiciendis. Itaque omnis est nam atque.","instructor":{"id":11,"username":"i_10","full_name":"Instructor 10","email":"i_10@test.com","gender":"male","date_of_birth":"2000-02-03 14:23:37"}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/courses/view-instructor-registered
    metadata:
      title: 'Get instructors'' registered courses'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":10,"name":"Intro to qui","code":"vuto8","description":"Et nobis quas hic nemo qui quaerat. Et et est facilis quas tempore velit. Laudantium et aut saepe est vel tempora. Et nam aut minima.","instructor":{"id":2,"username":"i_1","full_name":"Instructor 1","email":"i_1@test.com","gender":"male","date_of_birth":"2000-02-03 14:23:35"}},{"id":11,"name":"Intro to id","code":"rYSWJ","description":"Et voluptatem et voluptatem sed iste mollitia et. Aut error quaerat fugit inventore quaerat nobis. Cum sint quas rerum.","instructor":{"id":6,"username":"i_5","full_name":"Instructor 5","email":"i_5@test.com","gender":"male","date_of_birth":"2000-02-03 14:23:36"}}]}'
        headers: []
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/courses/self-register
    metadata:
      title: 'Self-register course by students'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      course_id:
        name: course_id
        description: 'The id of the course'
        required: true
        example: 17
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully enrolled!"
          }
        headers: []
        description: '200'
      -
        status: 405
        content: |-
          {
           "message": "You are already enrolled in this course."
          }
        headers: []
        description: '405'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/courses/register-student
    metadata:
      title: 'Register students'' courses by admin'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {ACCESS_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The user_id of the student to be registered'
        required: true
        example: 4
        type: integer
      course_id:
        name: course_id
        description: 'The id of the course'
        required: true
        example: 12
        type: integer
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Successfully registered student!"
          }
        headers: []
        description: '200'
      -
        status: 405
        content: |-
          {
           "message": "User cannot take any courses."
          }
        headers: []
        description: '405'
    responseFields: []
