openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/v1/login:
    post:
      summary: 'Login user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: eyJ0eX...
                  token_type: Bearer
                  expires_at: '2021-09-06 15:02:06'
                  user:
                    id: 2
                    username: i_1
                    full_name: 'Instructor 1'
                    email: i_1@test.com
                    gender: male
                    date_of_birth: '2000-02-03 14:23:35'
                  verified: true
                properties:
                  access_token:
                    type: string
                    example: eyJ0eX...
                  token_type:
                    type: string
                    example: Bearer
                  expires_at:
                    type: string
                    example: '2021-09-06 15:02:06'
                  user:
                    type: object
                    example:
                      id: 2
                      username: i_1
                      full_name: 'Instructor 1'
                      email: i_1@test.com
                      gender: male
                      date_of_birth: '2000-02-03 14:23:35'
                  verified:
                    type: boolean
                    example: true
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid username or password.'
                properties:
                  message:
                    type: string
                    example: 'Invalid username or password.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user. Must be a valid email address.'
                  example: itorp@example.net
                password:
                  type: string
                  description: 'The password of the user.'
                  example: repellat
                remember_me:
                  type: boolean
                  description: ''
                  example: false
              required:
                - email
                - password
      security: []
  /api/v1/self-register-student:
    post:
      summary: 'Self-registration of new users'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created user!'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'The username user.'
                  example: eum
                email:
                  type: string
                  description: 'A unique email address.'
                  example: error
                password:
                  type: string
                  description: 'The password of the account. Must be at least 8 characters.'
                  example: ''
                password_confirmation:
                  type: string
                  description: 'Same as password.'
                  example: voluptas
                first_name:
                  type: string
                  description: 'First name of user.'
                  example: et
                last_name:
                  type: string
                  description: 'Last name of user.'
                  example: id
                gender:
                  type: string
                  description: 'Gender of the user.'
                  example: et
                date_of_birth:
                  type: string
                  description: 'The date of birth of user. Must be a valid date.'
                  example: '2020-12-01'
              required:
                - username
                - email
                - password
                - password_confirmation
                - first_name
                - last_name
                - gender
                - date_of_birth
      security: []
  /api/v1/logout:
    get:
      summary: 'Log out user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully logged out'
                properties:
                  message:
                    type: string
                    example: 'Successfully logged out'
      tags:
        - Authentication
  /api/v1/courses/view-student-registered:
    get:
      summary: 'Get students'' registered courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 500
                      name: 'Intro to ab'
                      code: nDCr0
                      description: 'Pariatur sit omnis ad quibusdam. Et corporis hic qui a. Error qui repellat rerum ut quia ut dolores sit.'
                      instructor:
                        id: 2
                        username: i_1
                        first_name: Instructor
                        last_name: '1'
                        full_name: 'Instructor 1'
                        email: i_1@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                    -
                      id: 501
                      name: 'Intro to cum'
                      code: xi4ey
                      description: 'Voluptas vero iste quis magnam et est. Sunt omnis est odio similique ut ducimus qui asperiores. Quia non voluptas veniam aut blanditiis rerum.'
                      instructor:
                        id: 9
                        username: i_8
                        first_name: Instructor
                        last_name: '8'
                        full_name: 'Instructor 8'
                        email: i_8@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 500
                        name: 'Intro to ab'
                        code: nDCr0
                        description: 'Pariatur sit omnis ad quibusdam. Et corporis hic qui a. Error qui repellat rerum ut quia ut dolores sit.'
                        instructor:
                          id: 2
                          username: i_1
                          first_name: Instructor
                          last_name: '1'
                          full_name: 'Instructor 1'
                          email: i_1@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                      -
                        id: 501
                        name: 'Intro to cum'
                        code: xi4ey
                        description: 'Voluptas vero iste quis magnam et est. Sunt omnis est odio similique ut ducimus qui asperiores. Quia non voluptas veniam aut blanditiis rerum.'
                        instructor:
                          id: 9
                          username: i_8
                          first_name: Instructor
                          last_name: '8'
                          full_name: 'Instructor 8'
                          email: i_8@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                    items:
                      type: object
      tags:
        - 'Course Registration'
  /api/v1/courses/view-instructor-registered:
    get:
      summary: 'Get instructors'' registered courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 502
                      name: 'Intro to quia'
                      code: vLkDm
                      description: 'Ipsam fugit quas consequatur voluptatem facere sequi. Aliquam ea labore est. Sunt eaque non et fugiat iure.'
                      instructor:
                        id: 11
                        username: i_10
                        first_name: Instructor
                        last_name: '10'
                        full_name: 'Instructor 10'
                        email: i_10@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                    -
                      id: 503
                      name: 'Intro to fuga'
                      code: 5RRlQ
                      description: 'Enim ad voluptatum natus aut. Laboriosam voluptatem vel id fuga cumque. Assumenda repellendus cumque officiis.'
                      instructor:
                        id: 477
                        username: 'bormin chau'
                        first_name: bormin
                        last_name: chau
                        full_name: 'bormin chau'
                        email: borminchau@gmail.com
                        gender: male
                        date_of_birth: 1/Jan/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                          -
                            id: 3
                            name: student
                            display_name: student
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 502
                        name: 'Intro to quia'
                        code: vLkDm
                        description: 'Ipsam fugit quas consequatur voluptatem facere sequi. Aliquam ea labore est. Sunt eaque non et fugiat iure.'
                        instructor:
                          id: 11
                          username: i_10
                          first_name: Instructor
                          last_name: '10'
                          full_name: 'Instructor 10'
                          email: i_10@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                      -
                        id: 503
                        name: 'Intro to fuga'
                        code: 5RRlQ
                        description: 'Enim ad voluptatum natus aut. Laboriosam voluptatem vel id fuga cumque. Assumenda repellendus cumque officiis.'
                        instructor:
                          id: 477
                          username: 'bormin chau'
                          first_name: bormin
                          last_name: chau
                          full_name: 'bormin chau'
                          email: borminchau@gmail.com
                          gender: male
                          date_of_birth: 1/Jan/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                            -
                              id: 3
                              name: student
                              display_name: student
                    items:
                      type: object
      tags:
        - 'Course Registration'
  /api/v1/courses/self-register:
    post:
      summary: 'Self-register course by students'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully enrolled!'
                properties:
                  message:
                    type: string
                    example: 'Successfully enrolled!'
        405:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are already enrolled in this course.'
                properties:
                  message:
                    type: string
                    example: 'You are already enrolled in this course.'
      tags:
        - 'Course Registration'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
                  description: 'The id of the course.'
                  example: 18
              required:
                - course_id
  /api/v1/courses/register-student:
    post:
      summary: 'Register students'' courses by admin'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully registered student!'
                properties:
                  message:
                    type: string
                    example: 'Successfully registered student!'
        405:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User cannot take any courses.'
                properties:
                  message:
                    type: string
                    example: 'User cannot take any courses.'
      tags:
        - 'Course Registration'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The user_id of the student to be registered.'
                  example: 7
                course_id:
                  type: integer
                  description: 'The id of the course.'
                  example: 19
              required:
                - user_id
                - course_id
  /api/v1/courses/with-students:
    get:
      summary: 'Get a list of all courses with students'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 504
                      name: 'Intro to eum'
                      code: rAW0W
                      description: 'Maiores ratione et perferendis. Sint quis qui consequatur qui.'
                      instructor:
                        id: 9
                        username: i_8
                        first_name: Instructor
                        last_name: '8'
                        full_name: 'Instructor 8'
                        email: i_8@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                      students: []
                    -
                      id: 505
                      name: 'Intro to dolor'
                      code: yLRts
                      description: 'Tempora explicabo enim nam laudantium hic aut. Unde eveniet rerum quo reprehenderit ea nihil. Enim voluptatem dolor dicta incidunt magni.'
                      instructor:
                        id: 6
                        username: i_5
                        first_name: Instructor
                        last_name: '5'
                        full_name: 'Instructor 5'
                        email: i_5@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                      students: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 504
                        name: 'Intro to eum'
                        code: rAW0W
                        description: 'Maiores ratione et perferendis. Sint quis qui consequatur qui.'
                        instructor:
                          id: 9
                          username: i_8
                          first_name: Instructor
                          last_name: '8'
                          full_name: 'Instructor 8'
                          email: i_8@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                        students: []
                      -
                        id: 505
                        name: 'Intro to dolor'
                        code: yLRts
                        description: 'Tempora explicabo enim nam laudantium hic aut. Unde eveniet rerum quo reprehenderit ea nihil. Enim voluptatem dolor dicta incidunt magni.'
                        instructor:
                          id: 6
                          username: i_5
                          first_name: Instructor
                          last_name: '5'
                          full_name: 'Instructor 5'
                          email: i_5@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                        students: []
                    items:
                      type: object
      tags:
        - Courses
  /api/v1/courses:
    get:
      summary: 'Get a list of all courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 506
                      name: 'Intro to molestias'
                      code: 6TCaR
                      description: 'Est aut sit voluptas labore qui. Laudantium dolorem atque aliquam. Vero nam impedit vel vel.'
                      instructor:
                        id: 5
                        username: i_4
                        first_name: Instructor
                        last_name: '4'
                        full_name: 'Instructor 4'
                        email: i_4@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                    -
                      id: 507
                      name: 'Intro to mollitia'
                      code: 0y0mQ
                      description: 'Eveniet velit laudantium cupiditate rem voluptatem quia. Ducimus error sint ipsam itaque.'
                      instructor:
                        id: 2
                        username: i_1
                        first_name: Instructor
                        last_name: '1'
                        full_name: 'Instructor 1'
                        email: i_1@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 506
                        name: 'Intro to molestias'
                        code: 6TCaR
                        description: 'Est aut sit voluptas labore qui. Laudantium dolorem atque aliquam. Vero nam impedit vel vel.'
                        instructor:
                          id: 5
                          username: i_4
                          first_name: Instructor
                          last_name: '4'
                          full_name: 'Instructor 4'
                          email: i_4@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                      -
                        id: 507
                        name: 'Intro to mollitia'
                        code: 0y0mQ
                        description: 'Eveniet velit laudantium cupiditate rem voluptatem quia. Ducimus error sint ipsam itaque.'
                        instructor:
                          id: 2
                          username: i_1
                          first_name: Instructor
                          last_name: '1'
                          full_name: 'Instructor 1'
                          email: i_1@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                    items:
                      type: object
      tags:
        - Courses
    post:
      summary: 'Create a new course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created course!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created course!'
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the course.'
                  example: earum
                code:
                  type: string
                  description: 'The code of the course.'
                  example: ut
                description:
                  type: string
                  description: 'The description of the course.'
                  example: repellendus
                instructor_id:
                  type: integer
                  description: 'The id of the instructor.'
                  example: 5
              required:
                - name
                - code
                - description
                - instructor_id
  '/api/v1/courses/{id}':
    get:
      summary: 'Get the specified course.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 508
                    name: 'Intro to non'
                    code: 6vQBi
                    description: 'Corrupti est rem iusto qui. Magni voluptate aliquid saepe dolorum aut. Quidem dolor repellendus pariatur.'
                    instructor:
                      id: 10
                      username: i_9
                      first_name: Instructor
                      last_name: '9'
                      full_name: 'Instructor 9'
                      email: i_9@test.com
                      gender: male
                      date_of_birth: 3/Feb/2000
                      roles:
                        -
                          id: 2
                          name: instructor
                          display_name: instructor
                properties:
                  data:
                    type: object
                    example:
                      id: 508
                      name: 'Intro to non'
                      code: 6vQBi
                      description: 'Corrupti est rem iusto qui. Magni voluptate aliquid saepe dolorum aut. Quidem dolor repellendus pariatur.'
                      instructor:
                        id: 10
                        username: i_9
                        first_name: Instructor
                        last_name: '9'
                        full_name: 'Instructor 9'
                        email: i_9@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
      tags:
        - Courses
    delete:
      summary: 'Delete the specified course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted user!'
      tags:
        - Courses
    put:
      summary: 'Update the specified course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated course!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated course!'
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the course.'
                  example: sit
                code:
                  type: string
                  description: 'The code of the course.'
                  example: nam
                description:
                  type: string
                  description: 'The description of the course.'
                  example: ut
                instructor_id:
                  type: integer
                  description: 'The id of the instructor.'
                  example: 20
              required:
                - name
                - code
                - description
                - instructor_id
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the course.'
        example: 14
        required: true
        schema:
          type: integer
  /api/v1/permissions/by-group:
    get:
      summary: 'Get all permissions by groups'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  'Student permission':
                    -
                      id: 19
                      name: 'take courses'
                      display_name: 'take courses'
                      group: 'Student permission'
                  'Instructor permission':
                    -
                      id: 22
                      name: 'teach courses'
                      display_name: 'teach courses'
                      group: 'Instructor permission'
                    -
                      id: 23
                      name: 'view own-instructor-courses'
                      display_name: 'view own-instructor-courses'
                      group: 'Instructor permission'
                properties:
                  'Student permission':
                    type: array
                    example:
                      -
                        id: 19
                        name: 'take courses'
                        display_name: 'take courses'
                        group: 'Student permission'
                    items:
                      type: object
                  'Instructor permission':
                    type: array
                    example:
                      -
                        id: 22
                        name: 'teach courses'
                        display_name: 'teach courses'
                        group: 'Instructor permission'
                      -
                        id: 23
                        name: 'view own-instructor-courses'
                        display_name: 'view own-instructor-courses'
                        group: 'Instructor permission'
                    items:
                      type: object
      tags:
        - Permission
  /api/v1/permissions:
    get:
      summary: 'Display a listing of permissions.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'create users'
                      display_name: 'create usersssssss'
                      group: '123'
                    -
                      id: 1
                      name: 'create users'
                      display_name: 'create usersssssss'
                      group: '123'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'create users'
                        display_name: 'create usersssssss'
                        group: '123'
                      -
                        id: 1
                        name: 'create users'
                        display_name: 'create usersssssss'
                        group: '123'
                    items:
                      type: object
      tags:
        - Permission
  '/api/v1/permissions/{id}':
    get:
      summary: 'Display the specified permission.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'create users'
                    display_name: 'create usersssssss'
                    group: '123'
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      name: 'create users'
                      display_name: 'create usersssssss'
                      group: '123'
      tags:
        - Permission
    put:
      summary: 'Update the specified permission.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated permission!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated permission!'
      tags:
        - Permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'A unique name of the permission.'
                  example: illum
                group:
                  type: string
                  description: 'The group the permission belongs to.'
                  example: dicta
              required:
                - name
                - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the permission.'
        example: 5
        required: true
        schema:
          type: integer
  /api/v1/permissions/assign-to-role:
    post:
      summary: 'Assign permission to role'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"message\": \"No permission was assigned to role\",\n}"
      tags:
        - 'Permission assignment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role_id:
                  type: integer
                  description: 'The id of the role.'
                  example: 19
                permission_ids:
                  type: array
                  description: ''
                  example:
                    - 12
                    - 18
                  items:
                    type: integer
              required:
                - role_id
                - permission_ids
  /api/v1/permissions/assign-to-user:
    post:
      summary: 'Assign permission to user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"message\": \"No permission was assigned to user\",\n}"
      tags:
        - 'Permission assignment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user.'
                  example: 10
                permission_ids:
                  type: array
                  description: ''
                  example:
                    - 13
                    - 9
                  items:
                    type: integer
              required:
                - user_id
                - permission_ids
  /api/v1/permissions/revoke-from-role:
    post:
      summary: 'Revoke permissions from role'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"message\": \"No permission was revoked\",\n}"
      tags:
        - 'Permission assignment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role_id:
                  type: integer
                  description: 'The id of the role.'
                  example: 18
                permission_ids:
                  type: array
                  description: ''
                  example:
                    - 2
                    - 13
                  items:
                    type: integer
              required:
                - role_id
                - permission_ids
  /api/v1/permissions/revoke-from-user:
    post:
      summary: 'Revoke permissions from user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"message\": \"No permission was revoked\",\n}"
      tags:
        - 'Permission assignment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user.'
                  example: 8
                permission_ids:
                  type: array
                  description: ''
                  example:
                    - 9
                    - 20
                  items:
                    type: integer
              required:
                - user_id
                - permission_ids
  /api/v1/roles:
    get:
      summary: 'Display all roles.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: admin
                      display_name: admin
                    -
                      id: 1
                      name: admin
                      display_name: admin
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: admin
                        display_name: admin
                      -
                        id: 1
                        name: admin
                        display_name: admin
                    items:
                      type: object
      tags:
        - Roles
    post:
      summary: 'Store a new role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created role!'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the role.'
                  example: similique
              required:
                - name
  '/api/v1/roles/{id}':
    get:
      summary: 'Display a specific role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: admin
                    display_name: admin
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      name: admin
                      display_name: admin
      tags:
        - Roles
    delete:
      summary: 'Delete a specific role'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted role!'
      tags:
        - Roles
    put:
      summary: 'Update a specific role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated role!'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the role.'
                  example: qui
              required:
                - name
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the role.'
        example: minus
        required: true
        schema:
          type: string
  /api/v1/my-info:
    get:
      summary: 'Get the logged in user''s info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 479
                    username: mmurray
                    first_name: Alverta
                    last_name: Murray
                    full_name: 'Alverta Murray'
                    email: mmurray@test.com
                    gender: female
                    date_of_birth: 23/Dec/1984
                    roles: []
                properties:
                  data:
                    type: object
                    example:
                      id: 479
                      username: mmurray
                      first_name: Alverta
                      last_name: Murray
                      full_name: 'Alverta Murray'
                      email: mmurray@test.com
                      gender: female
                      date_of_birth: 23/Dec/1984
                      roles: []
      tags:
        - Users
  /api/v1/users/with-permissions:
    get:
      summary: 'Get all users with permissions'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      user:
                        id: 484
                        username: tillman.bode
                        first_name: Deanna
                        last_name: Kuphal
                        full_name: 'Deanna Kuphal'
                        email: tillman.bode@test.com
                        gender: male
                        date_of_birth: 17/Feb/1991
                        roles: []
                      permissions: []
                    -
                      user:
                        id: 485
                        username: pollich.jany
                        first_name: Itzel
                        last_name: Streich
                        full_name: 'Itzel Streich'
                        email: pollich.jany@test.com
                        gender: female
                        date_of_birth: 21/Dec/2006
                        roles: []
                      permissions: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        user:
                          id: 484
                          username: tillman.bode
                          first_name: Deanna
                          last_name: Kuphal
                          full_name: 'Deanna Kuphal'
                          email: tillman.bode@test.com
                          gender: male
                          date_of_birth: 17/Feb/1991
                          roles: []
                        permissions: []
                      -
                        user:
                          id: 485
                          username: pollich.jany
                          first_name: Itzel
                          last_name: Streich
                          full_name: 'Itzel Streich'
                          email: pollich.jany@test.com
                          gender: female
                          date_of_birth: 21/Dec/2006
                          roles: []
                        permissions: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/all-students:
    get:
      summary: 'Get all students'' info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 480
                      username: kali.smith
                      first_name: Kacie
                      last_name: Lueilwitz
                      full_name: 'Kacie Lueilwitz'
                      email: kali.smith@test.com
                      gender: female
                      date_of_birth: 18/Dec/1988
                      roles: []
                    -
                      id: 481
                      username: sipes.wilhelm
                      first_name: Angelita
                      last_name: Luettgen
                      full_name: 'Angelita Luettgen'
                      email: sipes.wilhelm@test.com
                      gender: male
                      date_of_birth: 17/Jan/1989
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 480
                        username: kali.smith
                        first_name: Kacie
                        last_name: Lueilwitz
                        full_name: 'Kacie Lueilwitz'
                        email: kali.smith@test.com
                        gender: female
                        date_of_birth: 18/Dec/1988
                        roles: []
                      -
                        id: 481
                        username: sipes.wilhelm
                        first_name: Angelita
                        last_name: Luettgen
                        full_name: 'Angelita Luettgen'
                        email: sipes.wilhelm@test.com
                        gender: male
                        date_of_birth: 17/Jan/1989
                        roles: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/all-instructors:
    get:
      summary: 'Get all instructors'' info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 482
                      username: florian79
                      first_name: Robyn
                      last_name: Weissnat
                      full_name: 'Robyn Weissnat'
                      email: florian79@test.com
                      gender: female
                      date_of_birth: 14/Dec/1972
                      roles: []
                    -
                      id: 483
                      username: benny.hayes
                      first_name: Robin
                      last_name: Powlowski
                      full_name: 'Robin Powlowski'
                      email: benny.hayes@test.com
                      gender: male
                      date_of_birth: 24/Sep/2007
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 482
                        username: florian79
                        first_name: Robyn
                        last_name: Weissnat
                        full_name: 'Robyn Weissnat'
                        email: florian79@test.com
                        gender: female
                        date_of_birth: 14/Dec/1972
                        roles: []
                      -
                        id: 483
                        username: benny.hayes
                        first_name: Robin
                        last_name: Powlowski
                        full_name: 'Robin Powlowski'
                        email: benny.hayes@test.com
                        gender: male
                        date_of_birth: 24/Sep/2007
                        roles: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/users:
    get:
      summary: 'Get a list of all users'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 486
                      username: gretchen.gerhold
                      first_name: Dayna
                      last_name: Hane
                      full_name: 'Dayna Hane'
                      email: gretchen.gerhold@test.com
                      gender: male
                      date_of_birth: 22/Aug/2000
                      roles: []
                    -
                      id: 487
                      username: hans97
                      first_name: Heloise
                      last_name: Koepp
                      full_name: 'Heloise Koepp'
                      email: hans97@test.com
                      gender: female
                      date_of_birth: 9/Mar/1982
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 486
                        username: gretchen.gerhold
                        first_name: Dayna
                        last_name: Hane
                        full_name: 'Dayna Hane'
                        email: gretchen.gerhold@test.com
                        gender: male
                        date_of_birth: 22/Aug/2000
                        roles: []
                      -
                        id: 487
                        username: hans97
                        first_name: Heloise
                        last_name: Koepp
                        full_name: 'Heloise Koepp'
                        email: hans97@test.com
                        gender: female
                        date_of_birth: 9/Mar/1982
                        roles: []
                    items:
                      type: object
      tags:
        - Users
    post:
      summary: 'Create a new user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created user!'
                  credentials:
                    email: user@test.com
                    password: '12345678'
                properties:
                  message:
                    type: string
                    example: 'Successfully created user!'
                  credentials:
                    type: object
                    example:
                      email: user@test.com
                      password: '12345678'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'A unique username.'
                  example: qui
                email:
                  type: string
                  description: 'A unique email address.'
                  example: aut
                first_name:
                  type: string
                  description: 'First name of user.'
                  example: quod
                last_name:
                  type: string
                  description: 'Last name of user.'
                  example: odio
                gender:
                  type: string
                  description: 'Gender of the user.'
                  example: nobis
                date_of_birth:
                  type: string
                  description: 'The date of birth of user. Must be a valid date.'
                  example: '2020-12-01'
                role_ids:
                  type: array
                  description: ''
                  example:
                    - 20
                    - 10
                  items:
                    type: integer
              required:
                - username
                - email
                - first_name
                - last_name
                - gender
                - date_of_birth
                - role_ids
  '/api/v1/users/{id}':
    get:
      summary: 'Get the specified user.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 488
                    username: feil.maryjane
                    first_name: Noemie
                    last_name: Ortiz
                    full_name: 'Noemie Ortiz'
                    email: feil.maryjane@test.com
                    gender: female
                    date_of_birth: 1/Aug/1972
                    roles: []
                properties:
                  data:
                    type: object
                    example:
                      id: 488
                      username: feil.maryjane
                      first_name: Noemie
                      last_name: Ortiz
                      full_name: 'Noemie Ortiz'
                      email: feil.maryjane@test.com
                      gender: female
                      date_of_birth: 1/Aug/1972
                      roles: []
      tags:
        - Users
    delete:
      summary: 'Delete the specified user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted user!'
      tags:
        - Users
    put:
      summary: 'Update the specified user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated user!'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'A unique username.'
                  example: ducimus
                email:
                  type: string
                  description: 'A unique email address.'
                  example: amet
                first_name:
                  type: string
                  description: 'First name of user.'
                  example: quaerat
                last_name:
                  type: string
                  description: 'Last name of user.'
                  example: atque
                gender:
                  type: string
                  description: 'Gender of the user.'
                  example: ducimus
                date_of_birth:
                  type: string
                  description: 'The date of birth of user. Must be a valid date.'
                  example: '2020-12-01'
                role_ids:
                  type: array
                  description: ''
                  example:
                    - 17
                    - 2
                  items:
                    type: integer
              required:
                - username
                - email
                - first_name
                - last_name
                - gender
                - date_of_birth
                - role_ids
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 2
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPI endpoints for authentication such as login and registration"
  -
    name: 'Course Registration'
    description: "\nAPI endpoints for registering courses"
  -
    name: Courses
    description: "\nAPI endpoints for getting info about courses and creating courses"
  -
    name: Permission
    description: "\nAPI endpoints for managing permission"
  -
    name: 'Permission assignment'
    description: "\nAPI endpoints for assigning permissions to roles and users"
  -
    name: Roles
    description: "\nAPI endpoints for managing roles"
  -
    name: Users
    description: "\nAPI endpoints for creating user and getting user info"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
