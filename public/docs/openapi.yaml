openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/v1/login:
    post:
      summary: 'Login user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: eyJ0eX...
                  token_type: Bearer
                  expires_at: '2021-09-06 15:02:06'
                  user:
                    id: 2
                    username: i_1
                    full_name: 'Instructor 1'
                    email: i_1@test.com
                    gender: male
                    date_of_birth: '2000-02-03 14:23:35'
                  verified: true
                properties:
                  access_token:
                    type: string
                    example: eyJ0eX...
                  token_type:
                    type: string
                    example: Bearer
                  expires_at:
                    type: string
                    example: '2021-09-06 15:02:06'
                  user:
                    type: object
                    example:
                      id: 2
                      username: i_1
                      full_name: 'Instructor 1'
                      email: i_1@test.com
                      gender: male
                      date_of_birth: '2000-02-03 14:23:35'
                  verified:
                    type: boolean
                    example: true
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid username or password.'
                properties:
                  message:
                    type: string
                    example: 'Invalid username or password.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: vel
                password:
                  type: string
                  description: ''
                  example: nisi
                remember_me:
                  type: boolean
                  description: ''
                  example: true
              required:
                - email
                - password
                - remember_me
      security: []
  /api/v1/logout:
    get:
      summary: 'Log out user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully logged out'
                properties:
                  message:
                    type: string
                    example: 'Successfully logged out'
      tags:
        - Authentication
  /api/v1/self-register-student:
    post:
      summary: 'Self-registration of new users'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created user!'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: et
                email:
                  type: string
                  description: ''
                  example: expedita
                password:
                  type: string
                  description: ''
                  example: similique
                password_confirmation:
                  type: string
                  description: ''
                  example: quia
                first_name:
                  type: string
                  description: ''
                  example: neque
                last_name:
                  type: string
                  description: ''
                  example: omnis
                gender:
                  type: string
                  description: ''
                  example: harum
                date_of_birth:
                  type: string
                  description: 'Date in the format of Y-m-d'
                  example: eos
              required:
                - username
                - email
                - password
                - password_confirmation
                - first_name
                - last_name
                - gender
                - date_of_birth
      security: []
  /api/v1/courses/view-student-registered:
    get:
      summary: 'Get students'' registered courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 4
                      name: 'Intro to odit'
                      code: yPZB7
                      description: 'Distinctio hic est distinctio dolorum natus. Rerum maiores ipsam et recusandae. Rem culpa quia sequi amet rerum.'
                      instructor:
                        id: 8
                        username: i_7
                        first_name: Instructor
                        last_name: '7'
                        full_name: 'Instructor 7'
                        email: i_7@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          - 2
                    -
                      id: 5
                      name: 'Intro to est'
                      code: rMu8y
                      description: 'Ex eos ut cupiditate provident inventore. Sed similique vel iste voluptas ad. Ipsa cumque deleniti ratione doloribus ipsa neque qui et.'
                      instructor:
                        id: 9
                        username: i_8
                        first_name: Instructor
                        last_name: '8'
                        full_name: 'Instructor 8'
                        email: i_8@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          - 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 4
                        name: 'Intro to odit'
                        code: yPZB7
                        description: 'Distinctio hic est distinctio dolorum natus. Rerum maiores ipsam et recusandae. Rem culpa quia sequi amet rerum.'
                        instructor:
                          id: 8
                          username: i_7
                          first_name: Instructor
                          last_name: '7'
                          full_name: 'Instructor 7'
                          email: i_7@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            - 2
                      -
                        id: 5
                        name: 'Intro to est'
                        code: rMu8y
                        description: 'Ex eos ut cupiditate provident inventore. Sed similique vel iste voluptas ad. Ipsa cumque deleniti ratione doloribus ipsa neque qui et.'
                        instructor:
                          id: 9
                          username: i_8
                          first_name: Instructor
                          last_name: '8'
                          full_name: 'Instructor 8'
                          email: i_8@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            - 2
                    items:
                      type: object
      tags:
        - 'Course Registration'
  /api/v1/courses/view-instructor-registered:
    get:
      summary: 'Get instructors'' registered courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 6
                      name: 'Intro to dolorem'
                      code: dO3KX
                      description: 'Nostrum illo fuga accusamus dolorem ratione. Est consequatur ut corporis sint omnis magni. Ea et doloribus quia eos sed blanditiis omnis.'
                      instructor:
                        id: 8
                        username: i_7
                        first_name: Instructor
                        last_name: '7'
                        full_name: 'Instructor 7'
                        email: i_7@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          - 2
                    -
                      id: 7
                      name: 'Intro to id'
                      code: m2M6g
                      description: 'Dolor dolorem reiciendis dolor unde. Natus expedita ea ut. Nostrum eum sit qui.'
                      instructor:
                        id: 5
                        username: i_4
                        first_name: Instructor
                        last_name: '4'
                        full_name: 'Instructor 4'
                        email: i_4@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          - 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 6
                        name: 'Intro to dolorem'
                        code: dO3KX
                        description: 'Nostrum illo fuga accusamus dolorem ratione. Est consequatur ut corporis sint omnis magni. Ea et doloribus quia eos sed blanditiis omnis.'
                        instructor:
                          id: 8
                          username: i_7
                          first_name: Instructor
                          last_name: '7'
                          full_name: 'Instructor 7'
                          email: i_7@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            - 2
                      -
                        id: 7
                        name: 'Intro to id'
                        code: m2M6g
                        description: 'Dolor dolorem reiciendis dolor unde. Natus expedita ea ut. Nostrum eum sit qui.'
                        instructor:
                          id: 5
                          username: i_4
                          first_name: Instructor
                          last_name: '4'
                          full_name: 'Instructor 4'
                          email: i_4@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            - 2
                    items:
                      type: object
      tags:
        - 'Course Registration'
  /api/v1/courses/self-register:
    post:
      summary: 'Self-register course by students'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully enrolled!'
                properties:
                  message:
                    type: string
                    example: 'Successfully enrolled!'
        405:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are already enrolled in this course.'
                properties:
                  message:
                    type: string
                    example: 'You are already enrolled in this course.'
      tags:
        - 'Course Registration'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
                  description: 'The id of the course'
                  example: 16
              required:
                - course_id
  /api/v1/courses/register-student:
    post:
      summary: 'Register students'' courses by admin'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully registered student!'
                properties:
                  message:
                    type: string
                    example: 'Successfully registered student!'
        405:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User cannot take any courses.'
                properties:
                  message:
                    type: string
                    example: 'User cannot take any courses.'
      tags:
        - 'Course Registration'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The user_id of the student to be registered'
                  example: 12
                course_id:
                  type: integer
                  description: 'The id of the course'
                  example: 15
              required:
                - user_id
                - course_id
  /api/v1/courses:
    get:
      summary: 'Get a list of all courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 8
                      name: 'Intro to est'
                      code: Yj3Cx
                      description: 'Quo aliquid est error minima et itaque minima. Quidem soluta veniam et qui. Nihil necessitatibus corrupti consequuntur ut est.'
                      instructor:
                        id: 7
                        username: i_6
                        first_name: Instructor
                        last_name: '6'
                        full_name: 'Instructor 6'
                        email: i_6@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          - 2
                    -
                      id: 9
                      name: 'Intro to doloribus'
                      code: Fq0Ng
                      description: 'Placeat veniam et a illo corrupti perspiciatis earum dolor. Quod porro et dolore est praesentium. Incidunt quisquam qui iusto sint.'
                      instructor:
                        id: 6
                        username: i_5
                        first_name: Instructor
                        last_name: '5'
                        full_name: 'Instructor 5'
                        email: i_5@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          - 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 8
                        name: 'Intro to est'
                        code: Yj3Cx
                        description: 'Quo aliquid est error minima et itaque minima. Quidem soluta veniam et qui. Nihil necessitatibus corrupti consequuntur ut est.'
                        instructor:
                          id: 7
                          username: i_6
                          first_name: Instructor
                          last_name: '6'
                          full_name: 'Instructor 6'
                          email: i_6@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            - 2
                      -
                        id: 9
                        name: 'Intro to doloribus'
                        code: Fq0Ng
                        description: 'Placeat veniam et a illo corrupti perspiciatis earum dolor. Quod porro et dolore est praesentium. Incidunt quisquam qui iusto sint.'
                        instructor:
                          id: 6
                          username: i_5
                          first_name: Instructor
                          last_name: '5'
                          full_name: 'Instructor 5'
                          email: i_5@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            - 2
                    items:
                      type: object
      tags:
        - Courses
    post:
      summary: 'Create a new course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created course!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created course!'
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the course'
                  example: quia
                code:
                  type: string
                  description: 'The code of the course'
                  example: dolor
                description:
                  type: string
                  description: 'The description of the course'
                  example: nobis
                instructor_id:
                  type: integer
                  description: 'The user_id of the instructor of the course'
                  example: 6
              required:
                - name
                - code
                - description
                - instructor_id
  '/api/v1/courses/{id}':
    get:
      summary: 'Get the specified course.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 10
                    name: 'Intro to libero'
                    code: QIbKw
                    description: 'Cumque aut voluptatibus ipsum quod provident quos. Ex sequi et officiis repellat. Fugiat nisi deserunt distinctio temporibus.'
                    instructor:
                      id: 3
                      username: i_2
                      first_name: Instructor
                      last_name: '2'
                      full_name: 'Instructor 2'
                      email: i_2@test.com
                      gender: male
                      date_of_birth: '2000-02-03 18:07:39'
                      roles:
                        - 2
                properties:
                  data:
                    type: object
                    example:
                      id: 10
                      name: 'Intro to libero'
                      code: QIbKw
                      description: 'Cumque aut voluptatibus ipsum quod provident quos. Ex sequi et officiis repellat. Fugiat nisi deserunt distinctio temporibus.'
                      instructor:
                        id: 3
                        username: i_2
                        first_name: Instructor
                        last_name: '2'
                        full_name: 'Instructor 2'
                        email: i_2@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:39'
                        roles:
                          - 2
      tags:
        - Courses
    put:
      summary: 'Update the specified course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated course!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated course!'
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the course'
                  example: quia
                code:
                  type: string
                  description: 'The code of the course'
                  example: soluta
                description:
                  type: string
                  description: 'The description of the course'
                  example: molestiae
                instructor_id:
                  type: integer
                  description: 'The user_id of the instructor of the course'
                  example: 2
              required:
                - name
                - code
                - description
                - instructor_id
    delete:
      summary: 'Delete the specified course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted user!'
      tags:
        - Courses
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the course'
        example: 3
        required: true
        schema:
          type: integer
  /api/v1/roles:
    get:
      summary: 'Display all roles.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: admin
                    -
                      id: 1
                      name: admin
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: admin
                      -
                        id: 1
                        name: admin
                    items:
                      type: object
      tags:
        - Roles
    post:
      summary: 'Store a new role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created role!'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'A unique role name'
                  example: ea
              required:
                - name
  '/api/v1/roles/{id}':
    get:
      summary: 'Display a specific role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: admin
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      name: admin
      tags:
        - Roles
    put:
      summary: 'Update a specific role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated role!'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the role'
                  example: amet
              required:
                - name
    delete:
      summary: 'Delete a specific role'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted role!'
      tags:
        - Roles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the role'
        example: 5
        required: true
        schema:
          type: integer
  /api/v1/all-students:
    get:
      summary: 'Get all students'' info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 100
                      username: marques.becker
                      first_name: Rashawn
                      last_name: Bergstrom
                      full_name: 'Rashawn Bergstrom'
                      email: marques.becker@test.com
                      gender: male
                      date_of_birth: '1995-03-12'
                      roles: []
                    -
                      id: 101
                      username: cleannon
                      first_name: Delpha
                      last_name: Friesen
                      full_name: 'Delpha Friesen'
                      email: cleannon@test.com
                      gender: male
                      date_of_birth: '1998-02-06'
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 100
                        username: marques.becker
                        first_name: Rashawn
                        last_name: Bergstrom
                        full_name: 'Rashawn Bergstrom'
                        email: marques.becker@test.com
                        gender: male
                        date_of_birth: '1995-03-12'
                        roles: []
                      -
                        id: 101
                        username: cleannon
                        first_name: Delpha
                        last_name: Friesen
                        full_name: 'Delpha Friesen'
                        email: cleannon@test.com
                        gender: male
                        date_of_birth: '1998-02-06'
                        roles: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/all-instructors:
    get:
      summary: 'Get all instructors'' info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 102
                      username: kunze.easter
                      first_name: Raul
                      last_name: Murray
                      full_name: 'Raul Murray'
                      email: kunze.easter@test.com
                      gender: male
                      date_of_birth: '2013-03-24'
                      roles: []
                    -
                      id: 103
                      username: jsteuber
                      first_name: Nyasia
                      last_name: Kuhic
                      full_name: 'Nyasia Kuhic'
                      email: jsteuber@test.com
                      gender: male
                      date_of_birth: '1974-03-22'
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 102
                        username: kunze.easter
                        first_name: Raul
                        last_name: Murray
                        full_name: 'Raul Murray'
                        email: kunze.easter@test.com
                        gender: male
                        date_of_birth: '2013-03-24'
                        roles: []
                      -
                        id: 103
                        username: jsteuber
                        first_name: Nyasia
                        last_name: Kuhic
                        full_name: 'Nyasia Kuhic'
                        email: jsteuber@test.com
                        gender: male
                        date_of_birth: '1974-03-22'
                        roles: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/my-info:
    get:
      summary: 'Get the logged in user''s info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 99
                    username: lilly60
                    first_name: Nicola
                    last_name: Hartmann
                    full_name: 'Nicola Hartmann'
                    email: lilly60@test.com
                    gender: male
                    date_of_birth: '2021-07-14'
                    roles: []
                properties:
                  data:
                    type: object
                    example:
                      id: 99
                      username: lilly60
                      first_name: Nicola
                      last_name: Hartmann
                      full_name: 'Nicola Hartmann'
                      email: lilly60@test.com
                      gender: male
                      date_of_birth: '2021-07-14'
                      roles: []
      tags:
        - Users
  /api/v1/users:
    get:
      summary: 'Get a list of all users'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 104
                      username: destany90
                      first_name: Lorena
                      last_name: Kub
                      full_name: 'Lorena Kub'
                      email: destany90@test.com
                      gender: male
                      date_of_birth: '1979-03-30'
                      roles: []
                    -
                      id: 105
                      username: urau
                      first_name: Eli
                      last_name: Schmitt
                      full_name: 'Eli Schmitt'
                      email: urau@test.com
                      gender: male
                      date_of_birth: '2017-09-25'
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 104
                        username: destany90
                        first_name: Lorena
                        last_name: Kub
                        full_name: 'Lorena Kub'
                        email: destany90@test.com
                        gender: male
                        date_of_birth: '1979-03-30'
                        roles: []
                      -
                        id: 105
                        username: urau
                        first_name: Eli
                        last_name: Schmitt
                        full_name: 'Eli Schmitt'
                        email: urau@test.com
                        gender: male
                        date_of_birth: '2017-09-25'
                        roles: []
                    items:
                      type: object
      tags:
        - Users
    post:
      summary: 'Create a new user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created user!'
                  credentials:
                    email: user@test.com
                    password: '12345678'
                properties:
                  message:
                    type: string
                    example: 'Successfully created user!'
                  credentials:
                    type: object
                    example:
                      email: user@test.com
                      password: '12345678'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'A unique username'
                  example: dolore
                email:
                  type: string
                  description: 'A unique email address'
                  example: voluptatem
                first_name:
                  type: string
                  description: ''
                  example: omnis
                last_name:
                  type: string
                  description: ''
                  example: quae
                gender:
                  type: string
                  description: ''
                  example: et
                date_of_birth:
                  type: string
                  description: ''
                  example: '2020-12-01'
                role_ids:
                  type: array
                  description: 'The role ids of the user'
                  example:
                    - 20
                    - 17
                  items:
                    type: integer
              required:
                - username
                - email
                - first_name
                - last_name
                - gender
                - date_of_birth
                - role_ids
  '/api/v1/users/{id}':
    get:
      summary: 'Get the specified user.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 106
                    username: schimmel.millie
                    first_name: Wellington
                    last_name: Kemmer
                    full_name: 'Wellington Kemmer'
                    email: schimmel.millie@test.com
                    gender: female
                    date_of_birth: '2021-01-09'
                    roles: []
                properties:
                  data:
                    type: object
                    example:
                      id: 106
                      username: schimmel.millie
                      first_name: Wellington
                      last_name: Kemmer
                      full_name: 'Wellington Kemmer'
                      email: schimmel.millie@test.com
                      gender: female
                      date_of_birth: '2021-01-09'
                      roles: []
      tags:
        - Users
    put:
      summary: 'Update the specified user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated user!'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'A unique username'
                  example: consequatur
                email:
                  type: string
                  description: 'A unique email address'
                  example: in
                first_name:
                  type: string
                  description: ''
                  example: voluptatem
                last_name:
                  type: string
                  description: ''
                  example: eaque
                gender:
                  type: string
                  description: ''
                  example: quos
                date_of_birth:
                  type: string
                  description: ''
                  example: '2020-12-01'
                role_ids:
                  type: array
                  description: 'The role ids of the user'
                  example:
                    - 9
                    - 19
                  items:
                    type: integer
              required:
                - username
                - email
                - first_name
                - last_name
                - gender
                - date_of_birth
                - role_ids
    delete:
      summary: 'Delete the specified user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted user!'
      tags:
        - Users
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user'
        example: 9
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPI endpoints for authentication such as login and registration"
  -
    name: 'Course Registration'
    description: "\nAPI endpoints for registering courses"
  -
    name: Courses
    description: "\nAPI endpoints for getting info about courses and creating courses"
  -
    name: Roles
    description: "\nAPI endpoints for managing roles"
  -
    name: Users
    description: "\nAPI endpoints for creating user and getting user info"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
