openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/v1/login:
    post:
      summary: 'Login user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: eyJ0eX...
                  token_type: Bearer
                  expires_at: '2021-09-06 15:02:06'
                  user:
                    id: 2
                    username: i_1
                    full_name: 'Instructor 1'
                    email: i_1@test.com
                    gender: male
                    date_of_birth: '2000-02-03 14:23:35'
                  verified: true
                properties:
                  access_token:
                    type: string
                    example: eyJ0eX...
                  token_type:
                    type: string
                    example: Bearer
                  expires_at:
                    type: string
                    example: '2021-09-06 15:02:06'
                  user:
                    type: object
                    example:
                      id: 2
                      username: i_1
                      full_name: 'Instructor 1'
                      email: i_1@test.com
                      gender: male
                      date_of_birth: '2000-02-03 14:23:35'
                  verified:
                    type: boolean
                    example: true
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid username or password.'
                properties:
                  message:
                    type: string
                    example: 'Invalid username or password.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: nam
                password:
                  type: string
                  description: ''
                  example: qui
                remember_me:
                  type: boolean
                  description: ''
                  example: false
              required:
                - email
                - password
                - remember_me
      security: []
  /api/v1/logout:
    get:
      summary: 'Log out user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully logged out'
                properties:
                  message:
                    type: string
                    example: 'Successfully logged out'
      tags:
        - Authentication
  /api/v1/courses/view-student-registered:
    get:
      summary: 'Get students'' registered courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 48
                      name: 'Intro to sed'
                      code: 93WR4
                      description: 'Omnis dolores ut officiis tenetur quos aut cumque. Quia natus reprehenderit ut velit magnam.'
                      instructor:
                        id: 3
                        username: i_2
                        full_name: 'Instructor 2'
                        email: i_2@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:39'
                        roles:
                          -
                            id: 2
                            name: instructor
                    -
                      id: 49
                      name: 'Intro to ad'
                      code: tGU5Z
                      description: 'Ipsa quisquam voluptatem ex. Nihil voluptatem sunt molestiae. Aspernatur laboriosam enim eum sit facilis voluptate.'
                      instructor:
                        id: 2
                        username: i_1
                        full_name: 'Instructor 1'
                        email: i_1@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:39'
                        roles:
                          -
                            id: 2
                            name: instructor
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 48
                        name: 'Intro to sed'
                        code: 93WR4
                        description: 'Omnis dolores ut officiis tenetur quos aut cumque. Quia natus reprehenderit ut velit magnam.'
                        instructor:
                          id: 3
                          username: i_2
                          full_name: 'Instructor 2'
                          email: i_2@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:39'
                          roles:
                            -
                              id: 2
                              name: instructor
                      -
                        id: 49
                        name: 'Intro to ad'
                        code: tGU5Z
                        description: 'Ipsa quisquam voluptatem ex. Nihil voluptatem sunt molestiae. Aspernatur laboriosam enim eum sit facilis voluptate.'
                        instructor:
                          id: 2
                          username: i_1
                          full_name: 'Instructor 1'
                          email: i_1@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:39'
                          roles:
                            -
                              id: 2
                              name: instructor
                    items:
                      type: object
      tags:
        - 'Course Registration'
  /api/v1/courses/view-instructor-registered:
    get:
      summary: 'Get instructors'' registered courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 50
                      name: 'Intro to nesciunt'
                      code: ESm4C
                      description: 'Odit rerum molestias voluptate qui aut et. Sit sit voluptas fuga voluptatem beatae enim sunt. Beatae ut nostrum ad provident in.'
                      instructor:
                        id: 7
                        username: i_6
                        full_name: 'Instructor 6'
                        email: i_6@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          -
                            id: 2
                            name: instructor
                    -
                      id: 51
                      name: 'Intro to et'
                      code: pWOM5
                      description: 'Aliquam consequatur ducimus quia nobis voluptas ex. Expedita minus non nam facere. Ipsum quas aliquam et nobis nisi corrupti.'
                      instructor:
                        id: 4
                        username: i_3
                        full_name: 'Instructor 3'
                        email: i_3@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          -
                            id: 2
                            name: instructor
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 50
                        name: 'Intro to nesciunt'
                        code: ESm4C
                        description: 'Odit rerum molestias voluptate qui aut et. Sit sit voluptas fuga voluptatem beatae enim sunt. Beatae ut nostrum ad provident in.'
                        instructor:
                          id: 7
                          username: i_6
                          full_name: 'Instructor 6'
                          email: i_6@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            -
                              id: 2
                              name: instructor
                      -
                        id: 51
                        name: 'Intro to et'
                        code: pWOM5
                        description: 'Aliquam consequatur ducimus quia nobis voluptas ex. Expedita minus non nam facere. Ipsum quas aliquam et nobis nisi corrupti.'
                        instructor:
                          id: 4
                          username: i_3
                          full_name: 'Instructor 3'
                          email: i_3@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            -
                              id: 2
                              name: instructor
                    items:
                      type: object
      tags:
        - 'Course Registration'
  /api/v1/courses/self-register:
    post:
      summary: 'Self-register course by students'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully enrolled!'
                properties:
                  message:
                    type: string
                    example: 'Successfully enrolled!'
        405:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are already enrolled in this course.'
                properties:
                  message:
                    type: string
                    example: 'You are already enrolled in this course.'
      tags:
        - 'Course Registration'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
                  description: 'The id of the course'
                  example: 6
              required:
                - course_id
  /api/v1/courses/register-student:
    post:
      summary: 'Register students'' courses by admin'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully registered student!'
                properties:
                  message:
                    type: string
                    example: 'Successfully registered student!'
        405:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User cannot take any courses.'
                properties:
                  message:
                    type: string
                    example: 'User cannot take any courses.'
      tags:
        - 'Course Registration'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The user_id of the student to be registered'
                  example: 11
                course_id:
                  type: integer
                  description: 'The id of the course'
                  example: 4
              required:
                - user_id
                - course_id
  /api/v1/courses:
    get:
      summary: 'Get a list of all courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 52
                      name: 'Intro to numquam'
                      code: XG7LH
                      description: 'Consequatur ipsam minus minus hic blanditiis eos. Natus sunt atque et ea optio quae consequatur. Provident eum recusandae dolorem qui possimus.'
                      instructor:
                        id: 11
                        username: i_10
                        full_name: 'Instructor 10'
                        email: i_10@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:41'
                        roles:
                          -
                            id: 2
                            name: instructor
                    -
                      id: 53
                      name: 'Intro to neque'
                      code: 2dIqw
                      description: 'Nam aut mollitia quia eos non. Voluptatem asperiores et facilis cum nulla reprehenderit eveniet. Expedita est eligendi maiores et itaque.'
                      instructor:
                        id: 10
                        username: i_9
                        full_name: 'Instructor 9'
                        email: i_9@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:41'
                        roles:
                          -
                            id: 2
                            name: instructor
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 52
                        name: 'Intro to numquam'
                        code: XG7LH
                        description: 'Consequatur ipsam minus minus hic blanditiis eos. Natus sunt atque et ea optio quae consequatur. Provident eum recusandae dolorem qui possimus.'
                        instructor:
                          id: 11
                          username: i_10
                          full_name: 'Instructor 10'
                          email: i_10@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:41'
                          roles:
                            -
                              id: 2
                              name: instructor
                      -
                        id: 53
                        name: 'Intro to neque'
                        code: 2dIqw
                        description: 'Nam aut mollitia quia eos non. Voluptatem asperiores et facilis cum nulla reprehenderit eveniet. Expedita est eligendi maiores et itaque.'
                        instructor:
                          id: 10
                          username: i_9
                          full_name: 'Instructor 9'
                          email: i_9@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:41'
                          roles:
                            -
                              id: 2
                              name: instructor
                    items:
                      type: object
      tags:
        - Courses
    post:
      summary: 'Create a new course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created course!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created course!'
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the course'
                  example: voluptatem
                code:
                  type: string
                  description: 'The code of the course'
                  example: deserunt
                description:
                  type: string
                  description: 'The description of the course'
                  example: nihil
                instructor_id:
                  type: integer
                  description: 'The user_id of the instructor of the course'
                  example: 7
              required:
                - name
                - code
                - description
                - instructor_id
  '/api/v1/courses/{id}':
    get:
      summary: 'Get the specified course.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 54
                    name: 'Intro to laboriosam'
                    code: Lw8RQ
                    description: 'Laborum aut rerum voluptates. Est quos omnis explicabo distinctio quae voluptatum. Voluptate enim molestias consectetur autem minus quia.'
                    instructor:
                      id: 7
                      username: i_6
                      full_name: 'Instructor 6'
                      email: i_6@test.com
                      gender: male
                      date_of_birth: '2000-02-03 18:07:40'
                      roles:
                        -
                          id: 2
                          name: instructor
                properties:
                  data:
                    type: object
                    example:
                      id: 54
                      name: 'Intro to laboriosam'
                      code: Lw8RQ
                      description: 'Laborum aut rerum voluptates. Est quos omnis explicabo distinctio quae voluptatum. Voluptate enim molestias consectetur autem minus quia.'
                      instructor:
                        id: 7
                        username: i_6
                        full_name: 'Instructor 6'
                        email: i_6@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          -
                            id: 2
                            name: instructor
      tags:
        - Courses
    put:
      summary: 'Update the specified course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated course!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated course!'
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the course'
                  example: et
                code:
                  type: string
                  description: 'The code of the course'
                  example: a
                description:
                  type: string
                  description: 'The description of the course'
                  example: quasi
                instructor_id:
                  type: integer
                  description: 'The user_id of the instructor of the course'
                  example: 17
              required:
                - name
                - code
                - description
                - instructor_id
    delete:
      summary: 'Delete the specified course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted user!'
      tags:
        - Courses
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the course'
        example: 20
        required: true
        schema:
          type: integer
  /api/v1/roles:
    get:
      summary: 'Display all roles.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: admin
                    -
                      id: 1
                      name: admin
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: admin
                      -
                        id: 1
                        name: admin
                    items:
                      type: object
      tags:
        - Roles
    post:
      summary: 'Store a new role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created role!'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'A unique role name'
                  example: rerum
              required:
                - name
  '/api/v1/roles/{id}':
    get:
      summary: 'Display a specific role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: admin
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      name: admin
      tags:
        - Roles
    put:
      summary: 'Update a specific role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated role!'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the role'
                  example: corrupti
              required:
                - name
    delete:
      summary: 'Delete a specific role'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted role!'
      tags:
        - Roles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the role'
        example: 9
        required: true
        schema:
          type: integer
  /api/v1/all-students:
    get:
      summary: 'Get all students'' info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 73
                      username: mohr.sadye
                      full_name: 'Savannah Grimes'
                      email: mohr.sadye@test.com
                      gender: female
                      date_of_birth: '1970-03-19'
                      roles: []
                    -
                      id: 74
                      username: taylor54
                      full_name: 'Marcelina Corkery'
                      email: taylor54@test.com
                      gender: female
                      date_of_birth: '1976-01-28'
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 73
                        username: mohr.sadye
                        full_name: 'Savannah Grimes'
                        email: mohr.sadye@test.com
                        gender: female
                        date_of_birth: '1970-03-19'
                        roles: []
                      -
                        id: 74
                        username: taylor54
                        full_name: 'Marcelina Corkery'
                        email: taylor54@test.com
                        gender: female
                        date_of_birth: '1976-01-28'
                        roles: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/all-instructors:
    get:
      summary: 'Get all instructors'' info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 75
                      username: funk.jadyn
                      full_name: 'Yazmin Cremin'
                      email: funk.jadyn@test.com
                      gender: female
                      date_of_birth: '1988-04-16'
                      roles: []
                    -
                      id: 76
                      username: herminio64
                      full_name: 'Dolly Feeney'
                      email: herminio64@test.com
                      gender: male
                      date_of_birth: '2017-11-06'
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 75
                        username: funk.jadyn
                        full_name: 'Yazmin Cremin'
                        email: funk.jadyn@test.com
                        gender: female
                        date_of_birth: '1988-04-16'
                        roles: []
                      -
                        id: 76
                        username: herminio64
                        full_name: 'Dolly Feeney'
                        email: herminio64@test.com
                        gender: male
                        date_of_birth: '2017-11-06'
                        roles: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/my-info:
    get:
      summary: 'Get the logged in user''s info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 72
                    username: nola.predovic
                    full_name: 'Orin Swaniawski'
                    email: nola.predovic@test.com
                    gender: female
                    date_of_birth: '2021-02-05'
                    roles: []
                properties:
                  data:
                    type: object
                    example:
                      id: 72
                      username: nola.predovic
                      full_name: 'Orin Swaniawski'
                      email: nola.predovic@test.com
                      gender: female
                      date_of_birth: '2021-02-05'
                      roles: []
      tags:
        - Users
  /api/v1/users:
    get:
      summary: 'Get a list of all users'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 77
                      username: gregorio58
                      full_name: 'Camren Parisian'
                      email: gregorio58@test.com
                      gender: male
                      date_of_birth: '1970-04-26'
                      roles: []
                    -
                      id: 78
                      username: hmetz
                      full_name: 'Maegan Shields'
                      email: hmetz@test.com
                      gender: male
                      date_of_birth: '1985-05-31'
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 77
                        username: gregorio58
                        full_name: 'Camren Parisian'
                        email: gregorio58@test.com
                        gender: male
                        date_of_birth: '1970-04-26'
                        roles: []
                      -
                        id: 78
                        username: hmetz
                        full_name: 'Maegan Shields'
                        email: hmetz@test.com
                        gender: male
                        date_of_birth: '1985-05-31'
                        roles: []
                    items:
                      type: object
      tags:
        - Users
    post:
      summary: 'Create a new user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created user!'
                  credentials:
                    email: user@test.com
                    password: '12345678'
                properties:
                  message:
                    type: string
                    example: 'Successfully created user!'
                  credentials:
                    type: object
                    example:
                      email: user@test.com
                      password: '12345678'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'A unique username'
                  example: aut
                email:
                  type: string
                  description: 'A unique email address'
                  example: nostrum
                first_name:
                  type: string
                  description: ''
                  example: officia
                last_name:
                  type: string
                  description: ''
                  example: facilis
                gender:
                  type: string
                  description: ''
                  example: veniam
                date_of_birth:
                  type: string
                  description: ''
                  example: '2020-12-01'
                role_ids:
                  type: array
                  description: 'The role ids of the user'
                  example:
                    - 16
                    - 14
                  items:
                    type: integer
              required:
                - username
                - email
                - first_name
                - last_name
                - gender
                - date_of_birth
                - role_ids
  '/api/v1/users/{id}':
    get:
      summary: 'Get the specified user.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 79
                    username: spencer.cindy
                    full_name: 'Beulah Sipes'
                    email: spencer.cindy@test.com
                    gender: male
                    date_of_birth: '1981-02-03'
                    roles: []
                properties:
                  data:
                    type: object
                    example:
                      id: 79
                      username: spencer.cindy
                      full_name: 'Beulah Sipes'
                      email: spencer.cindy@test.com
                      gender: male
                      date_of_birth: '1981-02-03'
                      roles: []
      tags:
        - Users
    put:
      summary: 'Update the specified user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated user!'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'A unique username'
                  example: occaecati
                email:
                  type: string
                  description: 'A unique email address'
                  example: sunt
                first_name:
                  type: string
                  description: ''
                  example: rerum
                last_name:
                  type: string
                  description: ''
                  example: beatae
                gender:
                  type: string
                  description: ''
                  example: velit
                date_of_birth:
                  type: string
                  description: ''
                  example: '2020-12-01'
                role_ids:
                  type: array
                  description: 'The role ids of the user'
                  example:
                    - 18
                    - 17
                  items:
                    type: integer
              required:
                - username
                - email
                - first_name
                - last_name
                - gender
                - date_of_birth
                - role_ids
    delete:
      summary: 'Delete the specified user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted user!'
      tags:
        - Users
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user'
        example: 8
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPI endpoints for authentication such as login and registration"
  -
    name: 'Course Registration'
    description: "\nAPI endpoints for registering courses"
  -
    name: Courses
    description: "\nAPI endpoints for getting info about courses and creating courses"
  -
    name: Roles
    description: "\nAPI endpoints for managing roles"
  -
    name: Users
    description: "\nAPI endpoints for creating user and getting user info"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
