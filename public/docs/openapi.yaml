openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/v1/login:
    post:
      summary: 'Login user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: eyJ0eX...
                  token_type: Bearer
                  expires_at: '2021-09-06 15:02:06'
                  user:
                    id: 2
                    username: i_1
                    full_name: 'Instructor 1'
                    email: i_1@test.com
                    gender: male
                    date_of_birth: '2000-02-03 14:23:35'
                  verified: true
                properties:
                  access_token:
                    type: string
                    example: eyJ0eX...
                  token_type:
                    type: string
                    example: Bearer
                  expires_at:
                    type: string
                    example: '2021-09-06 15:02:06'
                  user:
                    type: object
                    example:
                      id: 2
                      username: i_1
                      full_name: 'Instructor 1'
                      email: i_1@test.com
                      gender: male
                      date_of_birth: '2000-02-03 14:23:35'
                  verified:
                    type: boolean
                    example: true
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid username or password.'
                properties:
                  message:
                    type: string
                    example: 'Invalid username or password.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user. Must be a valid email address.'
                  example: dickens.dayton@example.org
                password:
                  type: string
                  description: 'The password of the user.'
                  example: maiores
                remember_me:
                  type: boolean
                  description: ''
                  example: false
              required:
                - email
                - password
      security: []
  /api/v1/self-register-student:
    post:
      summary: 'Self-registration of new users'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created user!'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'The username user.'
                  example: optio
                email:
                  type: string
                  description: 'A unique email address.'
                  example: quis
                password:
                  type: string
                  description: 'The password of the account. Must be at least 8 characters.'
                  example: wravue
                password_confirmation:
                  type: string
                  description: 'Same as password.'
                  example: illo
                first_name:
                  type: string
                  description: 'First name of user.'
                  example: nisi
                last_name:
                  type: string
                  description: 'Last name of user.'
                  example: occaecati
                gender:
                  type: string
                  description: 'Gender of the user.'
                  example: dolore
                date_of_birth:
                  type: string
                  description: 'The date of birth of user. Must be a valid date.'
                  example: '2020-12-01'
              required:
                - username
                - email
                - password
                - password_confirmation
                - first_name
                - last_name
                - gender
                - date_of_birth
      security: []
  /api/v1/logout:
    get:
      summary: 'Log out user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully logged out'
                properties:
                  message:
                    type: string
                    example: 'Successfully logged out'
      tags:
        - Authentication
  /api/v1/courses/view-student-registered:
    get:
      summary: 'Get students'' registered courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 31
                      name: 'Intro to eius'
                      code: vO0s5
                      description: 'Et eligendi natus qui veniam molestiae temporibus. Quam quibusdam reiciendis ipsum alias. Dolore explicabo quam placeat in.'
                      instructor:
                        id: 10
                        username: i_9
                        first_name: Instructor
                        last_name: '9'
                        full_name: 'Instructor 9'
                        email: i_9@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                    -
                      id: 32
                      name: 'Intro to molestiae'
                      code: PP5d0
                      description: 'Ipsa asperiores doloremque ea tempore. Impedit ea voluptatem molestiae doloribus. Ea deserunt qui quia quo.'
                      instructor:
                        id: 11
                        username: i_10
                        first_name: Instructor
                        last_name: '10'
                        full_name: 'Instructor 10'
                        email: i_10@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 31
                        name: 'Intro to eius'
                        code: vO0s5
                        description: 'Et eligendi natus qui veniam molestiae temporibus. Quam quibusdam reiciendis ipsum alias. Dolore explicabo quam placeat in.'
                        instructor:
                          id: 10
                          username: i_9
                          first_name: Instructor
                          last_name: '9'
                          full_name: 'Instructor 9'
                          email: i_9@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                      -
                        id: 32
                        name: 'Intro to molestiae'
                        code: PP5d0
                        description: 'Ipsa asperiores doloremque ea tempore. Impedit ea voluptatem molestiae doloribus. Ea deserunt qui quia quo.'
                        instructor:
                          id: 11
                          username: i_10
                          first_name: Instructor
                          last_name: '10'
                          full_name: 'Instructor 10'
                          email: i_10@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                    items:
                      type: object
      tags:
        - 'Course Registration'
  /api/v1/courses/view-instructor-registered:
    get:
      summary: 'Get instructors'' registered courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 33
                      name: 'Intro to mollitia'
                      code: pxqic
                      description: 'Quam quod illum unde voluptatem minus. Molestiae accusantium maxime quaerat fuga est.'
                      instructor:
                        id: 6
                        username: i_5
                        first_name: Instructor
                        last_name: '5'
                        full_name: 'Instructor 5'
                        email: i_5@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                    -
                      id: 34
                      name: 'Intro to libero'
                      code: B5tn5
                      description: 'Reprehenderit harum optio enim sit dolores labore enim. Omnis porro illum vitae dolorem cum enim.'
                      instructor:
                        id: 10
                        username: i_9
                        first_name: Instructor
                        last_name: '9'
                        full_name: 'Instructor 9'
                        email: i_9@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 33
                        name: 'Intro to mollitia'
                        code: pxqic
                        description: 'Quam quod illum unde voluptatem minus. Molestiae accusantium maxime quaerat fuga est.'
                        instructor:
                          id: 6
                          username: i_5
                          first_name: Instructor
                          last_name: '5'
                          full_name: 'Instructor 5'
                          email: i_5@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                      -
                        id: 34
                        name: 'Intro to libero'
                        code: B5tn5
                        description: 'Reprehenderit harum optio enim sit dolores labore enim. Omnis porro illum vitae dolorem cum enim.'
                        instructor:
                          id: 10
                          username: i_9
                          first_name: Instructor
                          last_name: '9'
                          full_name: 'Instructor 9'
                          email: i_9@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                    items:
                      type: object
      tags:
        - 'Course Registration'
  /api/v1/courses/self-register:
    post:
      summary: 'Self-register course by students'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully enrolled!'
                properties:
                  message:
                    type: string
                    example: 'Successfully enrolled!'
        405:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are already enrolled in this course.'
                properties:
                  message:
                    type: string
                    example: 'You are already enrolled in this course.'
      tags:
        - 'Course Registration'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
                  description: 'The id of the course.'
                  example: 19
              required:
                - course_id
  /api/v1/courses/register-student:
    post:
      summary: 'Register students'' courses by admin'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully registered student!'
                properties:
                  message:
                    type: string
                    example: 'Successfully registered student!'
        405:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User cannot take any courses.'
                properties:
                  message:
                    type: string
                    example: 'User cannot take any courses.'
      tags:
        - 'Course Registration'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The user_id of the student to be registered.'
                  example: 4
                course_id:
                  type: integer
                  description: 'The id of the course.'
                  example: 8
              required:
                - user_id
                - course_id
  /api/v1/courses/with-students:
    get:
      summary: 'Get a list of all courses with students'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 35
                      name: 'Intro to qui'
                      code: CnCzA
                      description: 'Voluptas tenetur sit consequatur dolores delectus voluptates. Est repellendus magnam qui perspiciatis dolorum. Fugit corporis eum temporibus.'
                      instructor:
                        id: 11
                        username: i_10
                        first_name: Instructor
                        last_name: '10'
                        full_name: 'Instructor 10'
                        email: i_10@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                      students: []
                    -
                      id: 36
                      name: 'Intro to est'
                      code: FzVKJ
                      description: 'Sit itaque accusantium totam dolore vel nam. Esse dicta vel accusantium quibusdam. Et in et commodi ipsum est.'
                      instructor:
                        id: 7
                        username: i_6
                        first_name: Instructor
                        last_name: '6'
                        full_name: 'Instructor 6'
                        email: i_6@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                      students: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 35
                        name: 'Intro to qui'
                        code: CnCzA
                        description: 'Voluptas tenetur sit consequatur dolores delectus voluptates. Est repellendus magnam qui perspiciatis dolorum. Fugit corporis eum temporibus.'
                        instructor:
                          id: 11
                          username: i_10
                          first_name: Instructor
                          last_name: '10'
                          full_name: 'Instructor 10'
                          email: i_10@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                        students: []
                      -
                        id: 36
                        name: 'Intro to est'
                        code: FzVKJ
                        description: 'Sit itaque accusantium totam dolore vel nam. Esse dicta vel accusantium quibusdam. Et in et commodi ipsum est.'
                        instructor:
                          id: 7
                          username: i_6
                          first_name: Instructor
                          last_name: '6'
                          full_name: 'Instructor 6'
                          email: i_6@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                        students: []
                    items:
                      type: object
      tags:
        - Courses
  /api/v1/courses:
    get:
      summary: 'Get a list of all courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 37
                      name: 'Intro to est'
                      code: pZE8y
                      description: 'Consequatur in blanditiis nihil iure. Et aliquam blanditiis possimus quasi ipsam. Rerum tempore deserunt quas rerum quae doloremque.'
                      instructor:
                        id: 5
                        username: i_4
                        first_name: Instructor
                        last_name: '4'
                        full_name: 'Instructor 4'
                        email: i_4@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                    -
                      id: 38
                      name: 'Intro to et'
                      code: RexNm
                      description: 'Eum fuga facere et nobis. Sapiente qui quia quisquam non voluptate expedita. Ex recusandae quisquam est.'
                      instructor:
                        id: 3
                        username: i_2
                        first_name: Instructor
                        last_name: '2'
                        full_name: 'Instructor 2'
                        email: i_2@test.com
                        gender: male
                        date_of_birth: 3/Feb/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 37
                        name: 'Intro to est'
                        code: pZE8y
                        description: 'Consequatur in blanditiis nihil iure. Et aliquam blanditiis possimus quasi ipsam. Rerum tempore deserunt quas rerum quae doloremque.'
                        instructor:
                          id: 5
                          username: i_4
                          first_name: Instructor
                          last_name: '4'
                          full_name: 'Instructor 4'
                          email: i_4@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                      -
                        id: 38
                        name: 'Intro to et'
                        code: RexNm
                        description: 'Eum fuga facere et nobis. Sapiente qui quia quisquam non voluptate expedita. Ex recusandae quisquam est.'
                        instructor:
                          id: 3
                          username: i_2
                          first_name: Instructor
                          last_name: '2'
                          full_name: 'Instructor 2'
                          email: i_2@test.com
                          gender: male
                          date_of_birth: 3/Feb/2000
                          roles:
                            -
                              id: 2
                              name: instructor
                              display_name: instructor
                    items:
                      type: object
      tags:
        - Courses
    post:
      summary: 'Create a new course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created course!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created course!'
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the course.'
                  example: animi
                code:
                  type: string
                  description: 'The code of the course.'
                  example: consequatur
                description:
                  type: string
                  description: 'The description of the course.'
                  example: ut
                instructor_id:
                  type: integer
                  description: 'The id of the instructor.'
                  example: 2
              required:
                - name
                - code
                - description
                - instructor_id
  '/api/v1/courses/{id}':
    get:
      summary: 'Get the specified course.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 39
                    name: 'Intro to blanditiis'
                    code: xekeT
                    description: 'Rerum repudiandae laudantium ipsum laudantium sint. Officia tenetur optio maiores rem ipsam mollitia et inventore. Deleniti et saepe autem quae.'
                    instructor:
                      id: 477
                      username: 'bormin chau'
                      first_name: bormin
                      last_name: chau
                      full_name: 'bormin chau'
                      email: borminchau@gmail.com
                      gender: male
                      date_of_birth: 1/Jan/2000
                      roles:
                        -
                          id: 2
                          name: instructor
                          display_name: instructor
                        -
                          id: 3
                          name: student
                          display_name: student
                properties:
                  data:
                    type: object
                    example:
                      id: 39
                      name: 'Intro to blanditiis'
                      code: xekeT
                      description: 'Rerum repudiandae laudantium ipsum laudantium sint. Officia tenetur optio maiores rem ipsam mollitia et inventore. Deleniti et saepe autem quae.'
                      instructor:
                        id: 477
                        username: 'bormin chau'
                        first_name: bormin
                        last_name: chau
                        full_name: 'bormin chau'
                        email: borminchau@gmail.com
                        gender: male
                        date_of_birth: 1/Jan/2000
                        roles:
                          -
                            id: 2
                            name: instructor
                            display_name: instructor
                          -
                            id: 3
                            name: student
                            display_name: student
      tags:
        - Courses
    put:
      summary: 'Update the specified course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated course!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated course!'
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the course.'
                  example: qui
                code:
                  type: string
                  description: 'The code of the course.'
                  example: pariatur
                description:
                  type: string
                  description: 'The description of the course.'
                  example: id
                instructor_id:
                  type: integer
                  description: 'The id of the instructor.'
                  example: 14
              required:
                - name
                - code
                - description
                - instructor_id
    delete:
      summary: 'Delete the specified course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted user!'
      tags:
        - Courses
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the course.'
        example: 7
        required: true
        schema:
          type: integer
  /api/v1/permissions/by-group:
    get:
      summary: 'Get all permissions by groups'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  'Student permission':
                    -
                      id: 19
                      name: 'take courses'
                      display_name: 'take courses'
                      group: 'Student permission'
                  'Instructor permission':
                    -
                      id: 22
                      name: 'teach courses'
                      display_name: 'teach courses'
                      group: 'Instructor permission'
                    -
                      id: 23
                      name: 'view own-instructor-courses'
                      display_name: 'view own-instructor-courses'
                      group: 'Instructor permission'
                properties:
                  'Student permission':
                    type: array
                    example:
                      -
                        id: 19
                        name: 'take courses'
                        display_name: 'take courses'
                        group: 'Student permission'
                    items:
                      type: object
                  'Instructor permission':
                    type: array
                    example:
                      -
                        id: 22
                        name: 'teach courses'
                        display_name: 'teach courses'
                        group: 'Instructor permission'
                      -
                        id: 23
                        name: 'view own-instructor-courses'
                        display_name: 'view own-instructor-courses'
                        group: 'Instructor permission'
                    items:
                      type: object
      tags:
        - Permission
  /api/v1/permissions:
    get:
      summary: 'Display a listing of permissions.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: 'create users'
                      display_name: 'create usersssssss'
                      group: '123'
                    -
                      id: 1
                      name: 'create users'
                      display_name: 'create usersssssss'
                      group: '123'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'create users'
                        display_name: 'create usersssssss'
                        group: '123'
                      -
                        id: 1
                        name: 'create users'
                        display_name: 'create usersssssss'
                        group: '123'
                    items:
                      type: object
      tags:
        - Permission
  '/api/v1/permissions/{id}':
    get:
      summary: 'Display the specified permission.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: 'create users'
                    display_name: 'create usersssssss'
                    group: '123'
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      name: 'create users'
                      display_name: 'create usersssssss'
                      group: '123'
      tags:
        - Permission
    put:
      summary: 'Update the specified permission.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated permission!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated permission!'
      tags:
        - Permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'A unique name of the permission.'
                  example: quis
                group:
                  type: string
                  description: 'The group the permission belongs to.'
                  example: et
              required:
                - name
                - group
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the permission.'
        example: 19
        required: true
        schema:
          type: integer
  /api/v1/permissions/assign-to-role:
    post:
      summary: 'Assign permission to role'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"message\": \"No permission was assigned to role\",\n}"
      tags:
        - 'Permission assignment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role_id:
                  type: integer
                  description: 'The id of the role.'
                  example: 18
                permission_ids:
                  type: array
                  description: ''
                  example:
                    - 17
                    - 14
                  items:
                    type: integer
              required:
                - role_id
                - permission_ids
  /api/v1/permissions/assign-to-user:
    post:
      summary: 'Assign permission to user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"message\": \"No permission was assigned to user\",\n}"
      tags:
        - 'Permission assignment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user.'
                  example: 5
                permission_ids:
                  type: array
                  description: ''
                  example:
                    - 16
                    - 1
                  items:
                    type: integer
              required:
                - user_id
                - permission_ids
  /api/v1/permissions/revoke-from-role:
    post:
      summary: 'Revoke permissions from role'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"message\": \"No permission was revoked\",\n}"
      tags:
        - 'Permission assignment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role_id:
                  type: integer
                  description: 'The id of the role.'
                  example: 7
                permission_ids:
                  type: array
                  description: ''
                  example:
                    - 13
                    - 11
                  items:
                    type: integer
              required:
                - role_id
                - permission_ids
  /api/v1/permissions/revoke-from-user:
    post:
      summary: 'Revoke permissions from user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"message\": \"No permission was revoked\",\n}"
      tags:
        - 'Permission assignment'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The id of the user.'
                  example: 1
                permission_ids:
                  type: array
                  description: ''
                  example:
                    - 2
                    - 6
                  items:
                    type: integer
              required:
                - user_id
                - permission_ids
  /api/v1/roles/with-permissions:
    get:
      summary: 'Get all roles with permissions'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      role:
                        id: 1
                        name: admin
                        display_name: admin
                      permissions:
                        -
                          id: 1
                          name: 'create users'
                          display_name: 'create usersssssss'
                          group: '123'
                        -
                          id: 2
                          name: 'view users'
                          display_name: 'view users'
                          group: 'Admin permission'
                        -
                          id: 3
                          name: 'view instructors'
                          display_name: 'view instructors'
                          group: 'Admin permission'
                        -
                          id: 4
                          name: 'view students'
                          display_name: 'view students'
                          group: 'Admin permission'
                        -
                          id: 5
                          name: 'edit users'
                          display_name: 'edit users'
                          group: 'Admin permission'
                        -
                          id: 6
                          name: 'delete users'
                          display_name: 'delete users'
                          group: 'Admin permission'
                        -
                          id: 7
                          name: 'register students-courses'
                          display_name: 'register students-courses'
                          group: 'Admin permission'
                        -
                          id: 8
                          name: 'create courses'
                          display_name: 'create courses'
                          group: 'Admin permission'
                        -
                          id: 9
                          name: 'edit courses'
                          display_name: 'edit courses'
                          group: 'Admin permission'
                        -
                          id: 10
                          name: 'delete courses'
                          display_name: 'delete courses'
                          group: 'Admin permission'
                        -
                          id: 11
                          name: 'view roles'
                          display_name: 'view roles'
                          group: 'Admin permission'
                        -
                          id: 12
                          name: 'create roles'
                          display_name: 'create roles'
                          group: 'Admin permission'
                        -
                          id: 13
                          name: 'edit roles'
                          display_name: 'edit roles'
                          group: 'Admin permission'
                        -
                          id: 14
                          name: 'delete roles'
                          display_name: 'delete roles'
                          group: 'Admin permission'
                        -
                          id: 15
                          name: 'view permissions'
                          display_name: 'view permissions'
                          group: 'Admin permission'
                        -
                          id: 16
                          name: 'edit permissions'
                          display_name: 'edit permissions'
                          group: 'Admin permission'
                        -
                          id: 17
                          name: 'assign permissions'
                          display_name: 'assign permissions'
                          group: 'Admin permission'
                        -
                          id: 18
                          name: 'revoke permissions'
                          display_name: 'revoke permissions'
                          group: 'Admin permission'
                    -
                      role:
                        id: 1
                        name: admin
                        display_name: admin
                      permissions:
                        -
                          id: 1
                          name: 'create users'
                          display_name: 'create usersssssss'
                          group: '123'
                        -
                          id: 2
                          name: 'view users'
                          display_name: 'view users'
                          group: 'Admin permission'
                        -
                          id: 3
                          name: 'view instructors'
                          display_name: 'view instructors'
                          group: 'Admin permission'
                        -
                          id: 4
                          name: 'view students'
                          display_name: 'view students'
                          group: 'Admin permission'
                        -
                          id: 5
                          name: 'edit users'
                          display_name: 'edit users'
                          group: 'Admin permission'
                        -
                          id: 6
                          name: 'delete users'
                          display_name: 'delete users'
                          group: 'Admin permission'
                        -
                          id: 7
                          name: 'register students-courses'
                          display_name: 'register students-courses'
                          group: 'Admin permission'
                        -
                          id: 8
                          name: 'create courses'
                          display_name: 'create courses'
                          group: 'Admin permission'
                        -
                          id: 9
                          name: 'edit courses'
                          display_name: 'edit courses'
                          group: 'Admin permission'
                        -
                          id: 10
                          name: 'delete courses'
                          display_name: 'delete courses'
                          group: 'Admin permission'
                        -
                          id: 11
                          name: 'view roles'
                          display_name: 'view roles'
                          group: 'Admin permission'
                        -
                          id: 12
                          name: 'create roles'
                          display_name: 'create roles'
                          group: 'Admin permission'
                        -
                          id: 13
                          name: 'edit roles'
                          display_name: 'edit roles'
                          group: 'Admin permission'
                        -
                          id: 14
                          name: 'delete roles'
                          display_name: 'delete roles'
                          group: 'Admin permission'
                        -
                          id: 15
                          name: 'view permissions'
                          display_name: 'view permissions'
                          group: 'Admin permission'
                        -
                          id: 16
                          name: 'edit permissions'
                          display_name: 'edit permissions'
                          group: 'Admin permission'
                        -
                          id: 17
                          name: 'assign permissions'
                          display_name: 'assign permissions'
                          group: 'Admin permission'
                        -
                          id: 18
                          name: 'revoke permissions'
                          display_name: 'revoke permissions'
                          group: 'Admin permission'
                properties:
                  data:
                    type: array
                    example:
                      -
                        role:
                          id: 1
                          name: admin
                          display_name: admin
                        permissions:
                          -
                            id: 1
                            name: 'create users'
                            display_name: 'create usersssssss'
                            group: '123'
                          -
                            id: 2
                            name: 'view users'
                            display_name: 'view users'
                            group: 'Admin permission'
                          -
                            id: 3
                            name: 'view instructors'
                            display_name: 'view instructors'
                            group: 'Admin permission'
                          -
                            id: 4
                            name: 'view students'
                            display_name: 'view students'
                            group: 'Admin permission'
                          -
                            id: 5
                            name: 'edit users'
                            display_name: 'edit users'
                            group: 'Admin permission'
                          -
                            id: 6
                            name: 'delete users'
                            display_name: 'delete users'
                            group: 'Admin permission'
                          -
                            id: 7
                            name: 'register students-courses'
                            display_name: 'register students-courses'
                            group: 'Admin permission'
                          -
                            id: 8
                            name: 'create courses'
                            display_name: 'create courses'
                            group: 'Admin permission'
                          -
                            id: 9
                            name: 'edit courses'
                            display_name: 'edit courses'
                            group: 'Admin permission'
                          -
                            id: 10
                            name: 'delete courses'
                            display_name: 'delete courses'
                            group: 'Admin permission'
                          -
                            id: 11
                            name: 'view roles'
                            display_name: 'view roles'
                            group: 'Admin permission'
                          -
                            id: 12
                            name: 'create roles'
                            display_name: 'create roles'
                            group: 'Admin permission'
                          -
                            id: 13
                            name: 'edit roles'
                            display_name: 'edit roles'
                            group: 'Admin permission'
                          -
                            id: 14
                            name: 'delete roles'
                            display_name: 'delete roles'
                            group: 'Admin permission'
                          -
                            id: 15
                            name: 'view permissions'
                            display_name: 'view permissions'
                            group: 'Admin permission'
                          -
                            id: 16
                            name: 'edit permissions'
                            display_name: 'edit permissions'
                            group: 'Admin permission'
                          -
                            id: 17
                            name: 'assign permissions'
                            display_name: 'assign permissions'
                            group: 'Admin permission'
                          -
                            id: 18
                            name: 'revoke permissions'
                            display_name: 'revoke permissions'
                            group: 'Admin permission'
                      -
                        role:
                          id: 1
                          name: admin
                          display_name: admin
                        permissions:
                          -
                            id: 1
                            name: 'create users'
                            display_name: 'create usersssssss'
                            group: '123'
                          -
                            id: 2
                            name: 'view users'
                            display_name: 'view users'
                            group: 'Admin permission'
                          -
                            id: 3
                            name: 'view instructors'
                            display_name: 'view instructors'
                            group: 'Admin permission'
                          -
                            id: 4
                            name: 'view students'
                            display_name: 'view students'
                            group: 'Admin permission'
                          -
                            id: 5
                            name: 'edit users'
                            display_name: 'edit users'
                            group: 'Admin permission'
                          -
                            id: 6
                            name: 'delete users'
                            display_name: 'delete users'
                            group: 'Admin permission'
                          -
                            id: 7
                            name: 'register students-courses'
                            display_name: 'register students-courses'
                            group: 'Admin permission'
                          -
                            id: 8
                            name: 'create courses'
                            display_name: 'create courses'
                            group: 'Admin permission'
                          -
                            id: 9
                            name: 'edit courses'
                            display_name: 'edit courses'
                            group: 'Admin permission'
                          -
                            id: 10
                            name: 'delete courses'
                            display_name: 'delete courses'
                            group: 'Admin permission'
                          -
                            id: 11
                            name: 'view roles'
                            display_name: 'view roles'
                            group: 'Admin permission'
                          -
                            id: 12
                            name: 'create roles'
                            display_name: 'create roles'
                            group: 'Admin permission'
                          -
                            id: 13
                            name: 'edit roles'
                            display_name: 'edit roles'
                            group: 'Admin permission'
                          -
                            id: 14
                            name: 'delete roles'
                            display_name: 'delete roles'
                            group: 'Admin permission'
                          -
                            id: 15
                            name: 'view permissions'
                            display_name: 'view permissions'
                            group: 'Admin permission'
                          -
                            id: 16
                            name: 'edit permissions'
                            display_name: 'edit permissions'
                            group: 'Admin permission'
                          -
                            id: 17
                            name: 'assign permissions'
                            display_name: 'assign permissions'
                            group: 'Admin permission'
                          -
                            id: 18
                            name: 'revoke permissions'
                            display_name: 'revoke permissions'
                            group: 'Admin permission'
                    items:
                      type: object
      tags:
        - 'Permission assignment'
  /api/v1/roles:
    get:
      summary: 'Display all roles.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: admin
                      display_name: admin
                    -
                      id: 1
                      name: admin
                      display_name: admin
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: admin
                        display_name: admin
                      -
                        id: 1
                        name: admin
                        display_name: admin
                    items:
                      type: object
      tags:
        - Roles
    post:
      summary: 'Store a new role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created role!'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the role.'
                  example: nesciunt
              required:
                - name
  '/api/v1/roles/{id}':
    get:
      summary: 'Display a specific role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: admin
                    display_name: admin
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      name: admin
                      display_name: admin
      tags:
        - Roles
    put:
      summary: 'Update a specific role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated role!'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the role.'
                  example: cupiditate
              required:
                - name
    delete:
      summary: 'Delete a specific role'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted role!'
      tags:
        - Roles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the role.'
        example: velit
        required: true
        schema:
          type: string
  /api/v1/my-info:
    get:
      summary: 'Get the logged in user''s info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 508
                    username: corene.conn
                    first_name: Karen
                    last_name: Sawayn
                    full_name: 'Karen Sawayn'
                    email: corene.conn@test.com
                    gender: male
                    date_of_birth: 6/Oct/1974
                    roles: []
                properties:
                  data:
                    type: object
                    example:
                      id: 508
                      username: corene.conn
                      first_name: Karen
                      last_name: Sawayn
                      full_name: 'Karen Sawayn'
                      email: corene.conn@test.com
                      gender: male
                      date_of_birth: 6/Oct/1974
                      roles: []
      tags:
        - Users
  /api/v1/all-students:
    get:
      summary: 'Get all students'' info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 509
                      username: kkozey
                      first_name: Rebecca
                      last_name: Spencer
                      full_name: 'Rebecca Spencer'
                      email: kkozey@test.com
                      gender: female
                      date_of_birth: 27/Nov/2018
                      roles: []
                    -
                      id: 510
                      username: berge.lisette
                      first_name: Columbus
                      last_name: Renner
                      full_name: 'Columbus Renner'
                      email: berge.lisette@test.com
                      gender: male
                      date_of_birth: 9/Feb/1975
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 509
                        username: kkozey
                        first_name: Rebecca
                        last_name: Spencer
                        full_name: 'Rebecca Spencer'
                        email: kkozey@test.com
                        gender: female
                        date_of_birth: 27/Nov/2018
                        roles: []
                      -
                        id: 510
                        username: berge.lisette
                        first_name: Columbus
                        last_name: Renner
                        full_name: 'Columbus Renner'
                        email: berge.lisette@test.com
                        gender: male
                        date_of_birth: 9/Feb/1975
                        roles: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/all-instructors:
    get:
      summary: 'Get all instructors'' info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 511
                      username: reynolds.jean
                      first_name: Meghan
                      last_name: Zieme
                      full_name: 'Meghan Zieme'
                      email: reynolds.jean@test.com
                      gender: male
                      date_of_birth: 5/Aug/1974
                      roles: []
                    -
                      id: 512
                      username: imogene11
                      first_name: Kelton
                      last_name: Reichert
                      full_name: 'Kelton Reichert'
                      email: imogene11@test.com
                      gender: male
                      date_of_birth: 12/Dec/1981
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 511
                        username: reynolds.jean
                        first_name: Meghan
                        last_name: Zieme
                        full_name: 'Meghan Zieme'
                        email: reynolds.jean@test.com
                        gender: male
                        date_of_birth: 5/Aug/1974
                        roles: []
                      -
                        id: 512
                        username: imogene11
                        first_name: Kelton
                        last_name: Reichert
                        full_name: 'Kelton Reichert'
                        email: imogene11@test.com
                        gender: male
                        date_of_birth: 12/Dec/1981
                        roles: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/users/with-permissions:
    get:
      summary: 'Get all users with permissions'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      user:
                        id: 513
                        username: cdonnelly
                        first_name: Sherman
                        last_name: Hirthe
                        full_name: 'Sherman Hirthe'
                        email: cdonnelly@test.com
                        gender: female
                        date_of_birth: 18/Jun/1988
                        roles: []
                      permissions: []
                    -
                      user:
                        id: 514
                        username: sawayn.astrid
                        first_name: Osbaldo
                        last_name: Mayert
                        full_name: 'Osbaldo Mayert'
                        email: sawayn.astrid@test.com
                        gender: male
                        date_of_birth: 20/Jun/1986
                        roles: []
                      permissions: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        user:
                          id: 513
                          username: cdonnelly
                          first_name: Sherman
                          last_name: Hirthe
                          full_name: 'Sherman Hirthe'
                          email: cdonnelly@test.com
                          gender: female
                          date_of_birth: 18/Jun/1988
                          roles: []
                        permissions: []
                      -
                        user:
                          id: 514
                          username: sawayn.astrid
                          first_name: Osbaldo
                          last_name: Mayert
                          full_name: 'Osbaldo Mayert'
                          email: sawayn.astrid@test.com
                          gender: male
                          date_of_birth: 20/Jun/1986
                          roles: []
                        permissions: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/users:
    get:
      summary: 'Get a list of all users'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 515
                      username: axel39
                      first_name: Cordie
                      last_name: White
                      full_name: 'Cordie White'
                      email: axel39@test.com
                      gender: female
                      date_of_birth: 27/Aug/2008
                      roles: []
                    -
                      id: 516
                      username: ramiro.walsh
                      first_name: Keenan
                      last_name: Schaden
                      full_name: 'Keenan Schaden'
                      email: ramiro.walsh@test.com
                      gender: male
                      date_of_birth: 9/Nov/2015
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 515
                        username: axel39
                        first_name: Cordie
                        last_name: White
                        full_name: 'Cordie White'
                        email: axel39@test.com
                        gender: female
                        date_of_birth: 27/Aug/2008
                        roles: []
                      -
                        id: 516
                        username: ramiro.walsh
                        first_name: Keenan
                        last_name: Schaden
                        full_name: 'Keenan Schaden'
                        email: ramiro.walsh@test.com
                        gender: male
                        date_of_birth: 9/Nov/2015
                        roles: []
                    items:
                      type: object
      tags:
        - Users
    post:
      summary: 'Create a new user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created user!'
                  credentials:
                    email: user@test.com
                    password: '12345678'
                properties:
                  message:
                    type: string
                    example: 'Successfully created user!'
                  credentials:
                    type: object
                    example:
                      email: user@test.com
                      password: '12345678'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'A unique username.'
                  example: qui
                email:
                  type: string
                  description: 'A unique email address.'
                  example: occaecati
                first_name:
                  type: string
                  description: 'First name of user.'
                  example: fugiat
                last_name:
                  type: string
                  description: 'Last name of user.'
                  example: perferendis
                gender:
                  type: string
                  description: 'Gender of the user.'
                  example: qui
                date_of_birth:
                  type: string
                  description: 'The date of birth of user. Must be a valid date.'
                  example: '2020-12-01'
                role_ids:
                  type: array
                  description: ''
                  example:
                    - 11
                    - 8
                  items:
                    type: integer
              required:
                - username
                - email
                - first_name
                - last_name
                - gender
                - date_of_birth
                - role_ids
  '/api/v1/users/{id}':
    get:
      summary: 'Get the specified user.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 517
                    username: ariel49
                    first_name: Aileen
                    last_name: Tromp
                    full_name: 'Aileen Tromp'
                    email: ariel49@test.com
                    gender: male
                    date_of_birth: 9/Feb/1999
                    roles: []
                properties:
                  data:
                    type: object
                    example:
                      id: 517
                      username: ariel49
                      first_name: Aileen
                      last_name: Tromp
                      full_name: 'Aileen Tromp'
                      email: ariel49@test.com
                      gender: male
                      date_of_birth: 9/Feb/1999
                      roles: []
      tags:
        - Users
    put:
      summary: 'Update the specified user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated user!'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'A unique username.'
                  example: sed
                email:
                  type: string
                  description: 'A unique email address.'
                  example: consequatur
                first_name:
                  type: string
                  description: 'First name of user.'
                  example: iure
                last_name:
                  type: string
                  description: 'Last name of user.'
                  example: illum
                gender:
                  type: string
                  description: 'Gender of the user.'
                  example: earum
                date_of_birth:
                  type: string
                  description: 'The date of birth of user. Must be a valid date.'
                  example: '2020-12-01'
                role_ids:
                  type: array
                  description: ''
                  example:
                    - 11
                    - 6
                  items:
                    type: integer
              required:
                - username
                - email
                - first_name
                - last_name
                - gender
                - date_of_birth
                - role_ids
    delete:
      summary: 'Delete the specified user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted user!'
      tags:
        - Users
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 7
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPI endpoints for authentication such as login and registration"
  -
    name: 'Course Registration'
    description: "\nAPI endpoints for registering courses"
  -
    name: Courses
    description: "\nAPI endpoints for getting info about courses and creating courses"
  -
    name: Permission
    description: "\nAPI endpoints for managing permission"
  -
    name: 'Permission assignment'
    description: "\nAPI endpoints for assigning permissions to roles and users"
  -
    name: Roles
    description: "\nAPI endpoints for managing roles"
  -
    name: Users
    description: "\nAPI endpoints for creating user and getting user info"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
