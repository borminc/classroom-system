openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/v1/login:
    post:
      summary: 'Login user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: eyJ0eX...
                  token_type: Bearer
                  expires_at: '2021-09-06 15:02:06'
                  user:
                    id: 2
                    username: i_1
                    full_name: 'Instructor 1'
                    email: i_1@test.com
                    gender: male
                    date_of_birth: '2000-02-03 14:23:35'
                  verified: true
                properties:
                  access_token:
                    type: string
                    example: eyJ0eX...
                  token_type:
                    type: string
                    example: Bearer
                  expires_at:
                    type: string
                    example: '2021-09-06 15:02:06'
                  user:
                    type: object
                    example:
                      id: 2
                      username: i_1
                      full_name: 'Instructor 1'
                      email: i_1@test.com
                      gender: male
                      date_of_birth: '2000-02-03 14:23:35'
                  verified:
                    type: boolean
                    example: true
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid username or password.'
                properties:
                  message:
                    type: string
                    example: 'Invalid username or password.'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: voluptatem
                password:
                  type: string
                  description: ''
                  example: nisi
                remember_me:
                  type: boolean
                  description: ''
                  example: false
              required:
                - email
                - password
                - remember_me
      security: []
  /api/v1/logout:
    get:
      summary: 'Log out user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully logged out'
                properties:
                  message:
                    type: string
                    example: 'Successfully logged out'
      tags:
        - Authentication
  /api/v1/self-register-student:
    post:
      summary: 'Self-registration of new users'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created user!'
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: qui
                email:
                  type: string
                  description: ''
                  example: nihil
                password:
                  type: string
                  description: ''
                  example: praesentium
                password_confirmation:
                  type: string
                  description: ''
                  example: quia
                first_name:
                  type: string
                  description: ''
                  example: dolor
                last_name:
                  type: string
                  description: ''
                  example: et
                gender:
                  type: string
                  description: ''
                  example: qui
                date_of_birth:
                  type: string
                  description: 'Date in the format of Y-m-d'
                  example: aut
              required:
                - username
                - email
                - password
                - password_confirmation
                - first_name
                - last_name
                - gender
                - date_of_birth
      security: []
  /api/v1/courses/view-student-registered:
    get:
      summary: 'Get students'' registered courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 11
                      name: 'Intro to sed'
                      code: lPUlC
                      description: 'Repellendus est non incidunt omnis ratione. Consectetur omnis sit distinctio magni rerum dolores. Dolore quibusdam sapiente dolorem qui quia.'
                      instructor:
                        id: 9
                        username: i_8
                        full_name: 'Instructor 8'
                        email: i_8@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          -
                            id: 2
                            name: instructor
                    -
                      id: 12
                      name: 'Intro to similique'
                      code: gYSNA
                      description: 'Unde sequi et tempore libero magni odio. Molestiae est quia est.'
                      instructor:
                        id: 5
                        username: i_4
                        full_name: 'Instructor 4'
                        email: i_4@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          -
                            id: 2
                            name: instructor
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 11
                        name: 'Intro to sed'
                        code: lPUlC
                        description: 'Repellendus est non incidunt omnis ratione. Consectetur omnis sit distinctio magni rerum dolores. Dolore quibusdam sapiente dolorem qui quia.'
                        instructor:
                          id: 9
                          username: i_8
                          full_name: 'Instructor 8'
                          email: i_8@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            -
                              id: 2
                              name: instructor
                      -
                        id: 12
                        name: 'Intro to similique'
                        code: gYSNA
                        description: 'Unde sequi et tempore libero magni odio. Molestiae est quia est.'
                        instructor:
                          id: 5
                          username: i_4
                          full_name: 'Instructor 4'
                          email: i_4@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            -
                              id: 2
                              name: instructor
                    items:
                      type: object
      tags:
        - 'Course Registration'
  /api/v1/courses/view-instructor-registered:
    get:
      summary: 'Get instructors'' registered courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 13
                      name: 'Intro to quidem'
                      code: ugMnN
                      description: 'Saepe sit cum eos eligendi. Sed distinctio est est libero. Ipsum tempore dolor iusto maxime corrupti assumenda qui.'
                      instructor:
                        id: 8
                        username: i_7
                        full_name: 'Instructor 7'
                        email: i_7@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          -
                            id: 2
                            name: instructor
                    -
                      id: 14
                      name: 'Intro to excepturi'
                      code: oHPER
                      description: 'Qui optio modi eveniet quia. Est atque quod ut non quo quia sint. Enim autem harum saepe iste quia odit non quia.'
                      instructor:
                        id: 7
                        username: i_6
                        full_name: 'Instructor 6'
                        email: i_6@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          -
                            id: 2
                            name: instructor
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 13
                        name: 'Intro to quidem'
                        code: ugMnN
                        description: 'Saepe sit cum eos eligendi. Sed distinctio est est libero. Ipsum tempore dolor iusto maxime corrupti assumenda qui.'
                        instructor:
                          id: 8
                          username: i_7
                          full_name: 'Instructor 7'
                          email: i_7@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            -
                              id: 2
                              name: instructor
                      -
                        id: 14
                        name: 'Intro to excepturi'
                        code: oHPER
                        description: 'Qui optio modi eveniet quia. Est atque quod ut non quo quia sint. Enim autem harum saepe iste quia odit non quia.'
                        instructor:
                          id: 7
                          username: i_6
                          full_name: 'Instructor 6'
                          email: i_6@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            -
                              id: 2
                              name: instructor
                    items:
                      type: object
      tags:
        - 'Course Registration'
  /api/v1/courses/self-register:
    post:
      summary: 'Self-register course by students'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully enrolled!'
                properties:
                  message:
                    type: string
                    example: 'Successfully enrolled!'
        405:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You are already enrolled in this course.'
                properties:
                  message:
                    type: string
                    example: 'You are already enrolled in this course.'
      tags:
        - 'Course Registration'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                course_id:
                  type: integer
                  description: 'The id of the course'
                  example: 2
              required:
                - course_id
  /api/v1/courses/register-student:
    post:
      summary: 'Register students'' courses by admin'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully registered student!'
                properties:
                  message:
                    type: string
                    example: 'Successfully registered student!'
        405:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User cannot take any courses.'
                properties:
                  message:
                    type: string
                    example: 'User cannot take any courses.'
      tags:
        - 'Course Registration'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 'The user_id of the student to be registered'
                  example: 17
                course_id:
                  type: integer
                  description: 'The id of the course'
                  example: 10
              required:
                - user_id
                - course_id
  /api/v1/courses:
    get:
      summary: 'Get a list of all courses'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 15
                      name: 'Intro to nemo'
                      code: 1wZRw
                      description: 'Repellendus molestias sed quisquam nam odio consequatur. Fugit quia esse ea dolor sint laudantium harum.'
                      instructor:
                        id: 10
                        username: i_9
                        full_name: 'Instructor 9'
                        email: i_9@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:41'
                        roles:
                          -
                            id: 2
                            name: instructor
                    -
                      id: 16
                      name: 'Intro to dignissimos'
                      code: tWLBh
                      description: 'Tempore maxime ex sint sunt possimus ea. Eaque debitis iusto fugit molestiae dolorum similique.'
                      instructor:
                        id: 6
                        username: i_5
                        full_name: 'Instructor 5'
                        email: i_5@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          -
                            id: 2
                            name: instructor
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 15
                        name: 'Intro to nemo'
                        code: 1wZRw
                        description: 'Repellendus molestias sed quisquam nam odio consequatur. Fugit quia esse ea dolor sint laudantium harum.'
                        instructor:
                          id: 10
                          username: i_9
                          full_name: 'Instructor 9'
                          email: i_9@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:41'
                          roles:
                            -
                              id: 2
                              name: instructor
                      -
                        id: 16
                        name: 'Intro to dignissimos'
                        code: tWLBh
                        description: 'Tempore maxime ex sint sunt possimus ea. Eaque debitis iusto fugit molestiae dolorum similique.'
                        instructor:
                          id: 6
                          username: i_5
                          full_name: 'Instructor 5'
                          email: i_5@test.com
                          gender: male
                          date_of_birth: '2000-02-03 18:07:40'
                          roles:
                            -
                              id: 2
                              name: instructor
                    items:
                      type: object
      tags:
        - Courses
    post:
      summary: 'Create a new course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created course!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created course!'
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the course'
                  example: et
                code:
                  type: string
                  description: 'The code of the course'
                  example: quo
                description:
                  type: string
                  description: 'The description of the course'
                  example: suscipit
                instructor_id:
                  type: integer
                  description: 'The user_id of the instructor of the course'
                  example: 3
              required:
                - name
                - code
                - description
                - instructor_id
  '/api/v1/courses/{id}':
    get:
      summary: 'Get the specified course.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 17
                    name: 'Intro to laborum'
                    code: JNPSo
                    description: 'Et voluptatem autem quia. Recusandae est eius ea voluptatum et at eum aut. Laborum atque officiis aliquid perferendis earum adipisci ut.'
                    instructor:
                      id: 4
                      username: i_3
                      full_name: 'Instructor 3'
                      email: i_3@test.com
                      gender: male
                      date_of_birth: '2000-02-03 18:07:40'
                      roles:
                        -
                          id: 2
                          name: instructor
                properties:
                  data:
                    type: object
                    example:
                      id: 17
                      name: 'Intro to laborum'
                      code: JNPSo
                      description: 'Et voluptatem autem quia. Recusandae est eius ea voluptatum et at eum aut. Laborum atque officiis aliquid perferendis earum adipisci ut.'
                      instructor:
                        id: 4
                        username: i_3
                        full_name: 'Instructor 3'
                        email: i_3@test.com
                        gender: male
                        date_of_birth: '2000-02-03 18:07:40'
                        roles:
                          -
                            id: 2
                            name: instructor
      tags:
        - Courses
    put:
      summary: 'Update the specified course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated course!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated course!'
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the course'
                  example: fugit
                code:
                  type: string
                  description: 'The code of the course'
                  example: dolorem
                description:
                  type: string
                  description: 'The description of the course'
                  example: vero
                instructor_id:
                  type: integer
                  description: 'The user_id of the instructor of the course'
                  example: 17
              required:
                - name
                - code
                - description
                - instructor_id
    delete:
      summary: 'Delete the specified course'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted user!'
      tags:
        - Courses
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the course'
        example: 7
        required: true
        schema:
          type: integer
  /api/v1/roles:
    get:
      summary: 'Display all roles.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: admin
                    -
                      id: 1
                      name: admin
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: admin
                      -
                        id: 1
                        name: admin
                    items:
                      type: object
      tags:
        - Roles
    post:
      summary: 'Store a new role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully created role!'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'A unique role name'
                  example: consequuntur
              required:
                - name
  '/api/v1/roles/{id}':
    get:
      summary: 'Display a specific role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 1
                    name: admin
                properties:
                  data:
                    type: object
                    example:
                      id: 1
                      name: admin
      tags:
        - Roles
    put:
      summary: 'Update a specific role.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated role!'
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the role'
                  example: rerum
              required:
                - name
    delete:
      summary: 'Delete a specific role'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted role!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted role!'
      tags:
        - Roles
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the role'
        example: 19
        required: true
        schema:
          type: integer
  /api/v1/all-students:
    get:
      summary: 'Get all students'' info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 90
                      username: cynthia.wyman
                      full_name: 'Tina Ziemann'
                      email: cynthia.wyman@test.com
                      gender: female
                      date_of_birth: '1977-07-05'
                      roles: []
                    -
                      id: 91
                      username: kautzer.glenda
                      full_name: 'Margarita Vandervort'
                      email: kautzer.glenda@test.com
                      gender: female
                      date_of_birth: '2004-06-11'
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 90
                        username: cynthia.wyman
                        full_name: 'Tina Ziemann'
                        email: cynthia.wyman@test.com
                        gender: female
                        date_of_birth: '1977-07-05'
                        roles: []
                      -
                        id: 91
                        username: kautzer.glenda
                        full_name: 'Margarita Vandervort'
                        email: kautzer.glenda@test.com
                        gender: female
                        date_of_birth: '2004-06-11'
                        roles: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/all-instructors:
    get:
      summary: 'Get all instructors'' info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 92
                      username: fernando.brekke
                      full_name: 'Yessenia Miller'
                      email: fernando.brekke@test.com
                      gender: female
                      date_of_birth: '1982-08-16'
                      roles: []
                    -
                      id: 93
                      username: radams
                      full_name: 'Sincere Homenick'
                      email: radams@test.com
                      gender: male
                      date_of_birth: '2015-01-19'
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 92
                        username: fernando.brekke
                        full_name: 'Yessenia Miller'
                        email: fernando.brekke@test.com
                        gender: female
                        date_of_birth: '1982-08-16'
                        roles: []
                      -
                        id: 93
                        username: radams
                        full_name: 'Sincere Homenick'
                        email: radams@test.com
                        gender: male
                        date_of_birth: '2015-01-19'
                        roles: []
                    items:
                      type: object
      tags:
        - Users
  /api/v1/my-info:
    get:
      summary: 'Get the logged in user''s info'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 89
                    username: corkery.keon
                    full_name: 'Gay Bashirian'
                    email: corkery.keon@test.com
                    gender: female
                    date_of_birth: '2007-06-29'
                    roles: []
                properties:
                  data:
                    type: object
                    example:
                      id: 89
                      username: corkery.keon
                      full_name: 'Gay Bashirian'
                      email: corkery.keon@test.com
                      gender: female
                      date_of_birth: '2007-06-29'
                      roles: []
      tags:
        - Users
  /api/v1/users:
    get:
      summary: 'Get a list of all users'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 94
                      username: daron.hettinger
                      full_name: 'Avery Hamill'
                      email: daron.hettinger@test.com
                      gender: male
                      date_of_birth: '1997-08-17'
                      roles: []
                    -
                      id: 95
                      username: lisette.kovacek
                      full_name: 'Merlin Johnson'
                      email: lisette.kovacek@test.com
                      gender: female
                      date_of_birth: '2001-03-26'
                      roles: []
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 94
                        username: daron.hettinger
                        full_name: 'Avery Hamill'
                        email: daron.hettinger@test.com
                        gender: male
                        date_of_birth: '1997-08-17'
                        roles: []
                      -
                        id: 95
                        username: lisette.kovacek
                        full_name: 'Merlin Johnson'
                        email: lisette.kovacek@test.com
                        gender: female
                        date_of_birth: '2001-03-26'
                        roles: []
                    items:
                      type: object
      tags:
        - Users
    post:
      summary: 'Create a new user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created user!'
                  credentials:
                    email: user@test.com
                    password: '12345678'
                properties:
                  message:
                    type: string
                    example: 'Successfully created user!'
                  credentials:
                    type: object
                    example:
                      email: user@test.com
                      password: '12345678'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'A unique username'
                  example: et
                email:
                  type: string
                  description: 'A unique email address'
                  example: aut
                first_name:
                  type: string
                  description: ''
                  example: aut
                last_name:
                  type: string
                  description: ''
                  example: excepturi
                gender:
                  type: string
                  description: ''
                  example: quia
                date_of_birth:
                  type: string
                  description: ''
                  example: '2020-12-01'
                role_ids:
                  type: array
                  description: 'The role ids of the user'
                  example:
                    - 8
                    - 16
                  items:
                    type: integer
              required:
                - username
                - email
                - first_name
                - last_name
                - gender
                - date_of_birth
                - role_ids
  '/api/v1/users/{id}':
    get:
      summary: 'Get the specified user.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 96
                    username: krystal.kunze
                    full_name: 'Belle Hintz'
                    email: krystal.kunze@test.com
                    gender: female
                    date_of_birth: '1984-05-08'
                    roles: []
                properties:
                  data:
                    type: object
                    example:
                      id: 96
                      username: krystal.kunze
                      full_name: 'Belle Hintz'
                      email: krystal.kunze@test.com
                      gender: female
                      date_of_birth: '1984-05-08'
                      roles: []
      tags:
        - Users
    put:
      summary: 'Update the specified user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated user!'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'A unique username'
                  example: eveniet
                email:
                  type: string
                  description: 'A unique email address'
                  example: optio
                first_name:
                  type: string
                  description: ''
                  example: accusamus
                last_name:
                  type: string
                  description: ''
                  example: vel
                gender:
                  type: string
                  description: ''
                  example: perspiciatis
                date_of_birth:
                  type: string
                  description: ''
                  example: '2020-12-01'
                role_ids:
                  type: array
                  description: 'The role ids of the user'
                  example:
                    - 1
                    - 9
                  items:
                    type: integer
              required:
                - username
                - email
                - first_name
                - last_name
                - gender
                - date_of_birth
                - role_ids
    delete:
      summary: 'Delete the specified user'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {ACCESS_TOKEN}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully deleted user!'
                properties:
                  message:
                    type: string
                    example: 'Successfully deleted user!'
      tags:
        - Users
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user'
        example: 20
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPI endpoints for authentication such as login and registration"
  -
    name: 'Course Registration'
    description: "\nAPI endpoints for registering courses"
  -
    name: Courses
    description: "\nAPI endpoints for getting info about courses and creating courses"
  -
    name: Roles
    description: "\nAPI endpoints for managing roles"
  -
    name: Users
    description: "\nAPI endpoints for creating user and getting user info"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
